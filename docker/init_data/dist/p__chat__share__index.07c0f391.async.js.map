{"version":3,"file":"p__chat__share__index.07c0f391.async.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/LeftOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/LeftOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/RightOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/RightOutlined.js","webpack:///./src/pages/chat/shared-hooks.ts","webpack:///./src/pages/chat/share/index.less?4388","webpack:///./src/pages/chat/share/large.tsx","webpack:///./src/pages/chat/share/index.tsx","webpack:///./node_modules/antd/es/_util/extendsObject.js"],"sourcesContent":["// This icon file is generated automatically.\nvar LeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\" } }] }, \"name\": \"left\", \"theme\": \"outlined\" };\nexport default LeftOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport LeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/LeftOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar LeftOutlined = function LeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: LeftOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  LeftOutlined.displayName = 'LeftOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(LeftOutlined);","// This icon file is generated automatically.\nvar RightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z\" } }] }, \"name\": \"right\", \"theme\": \"outlined\" };\nexport default RightOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport RightOutlinedSvg from \"@ant-design/icons-svg/es/asn/RightOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar RightOutlined = function RightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: RightOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  RightOutlined.displayName = 'RightOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(RightOutlined);","import { MessageType } from '@/constants/chat';\nimport {\n  useCreateSharedConversation,\n  useFetchSharedConversation,\n} from '@/hooks/chatHooks';\nimport { useSendMessageWithSse } from '@/hooks/logicHooks';\nimport { useOneNamespaceEffectsLoading } from '@/hooks/storeHooks';\nimport { IAnswer } from '@/interfaces/database/chat';\nimport api from '@/utils/api';\nimport omit from 'lodash/omit';\nimport {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'umi';\nimport { v4 as uuid } from 'uuid';\nimport { useHandleMessageInputChange, useScrollToBottom } from './hooks';\nimport { IClientConversation, IMessage } from './interface';\n\nexport const useCreateSharedConversationOnMount = () => {\n  const [currentQueryParameters] = useSearchParams();\n  const [conversationId, setConversationId] = useState('');\n\n  const createConversation = useCreateSharedConversation();\n  const sharedId = currentQueryParameters.get('shared_id');\n  const userId = currentQueryParameters.get('user_id');\n\n  const setConversation = useCallback(async () => {\n    console.info(sharedId);\n    if (sharedId) {\n      const data = await createConversation(userId ?? undefined);\n      const id = data.data?.id;\n      if (id) {\n        setConversationId(id);\n      }\n    }\n  }, [createConversation, sharedId, userId]);\n\n  useEffect(() => {\n    setConversation();\n  }, [setConversation]);\n\n  return { conversationId };\n};\n\nexport const useSelectCurrentSharedConversation = (conversationId: string) => {\n  const [currentConversation, setCurrentConversation] =\n    useState<IClientConversation>({} as IClientConversation);\n  const fetchConversation = useFetchSharedConversation();\n  const loading = useOneNamespaceEffectsLoading('chatModel', [\n    'getExternalConversation',\n  ]);\n\n  const ref = useScrollToBottom(currentConversation);\n\n  const addNewestConversation = useCallback((message: string) => {\n    setCurrentConversation((pre) => {\n      return {\n        ...pre,\n        message: [\n          ...(pre.message ?? []),\n          {\n            role: MessageType.User,\n            content: message,\n            id: uuid(),\n          } as IMessage,\n          {\n            role: MessageType.Assistant,\n            content: '',\n            id: uuid(),\n            reference: [],\n          } as IMessage,\n        ],\n      };\n    });\n  }, []);\n\n  const addNewestAnswer = useCallback((answer: IAnswer) => {\n    setCurrentConversation((pre) => {\n      const latestMessage = pre.message?.at(-1);\n\n      if (latestMessage) {\n        return {\n          ...pre,\n          message: [\n            ...pre.message.slice(0, -1),\n            {\n              ...latestMessage,\n              content: answer.answer,\n              reference: answer.reference,\n            } as IMessage,\n          ],\n        };\n      }\n      return pre;\n    });\n  }, []);\n\n  const removeLatestMessage = useCallback(() => {\n    setCurrentConversation((pre) => {\n      const nextMessages = pre.message.slice(0, -2);\n      return {\n        ...pre,\n        message: nextMessages,\n      };\n    });\n  }, []);\n\n  const fetchConversationOnMount = useCallback(async () => {\n    if (conversationId) {\n      const data = await fetchConversation(conversationId);\n      if (data.retcode === 0) {\n        setCurrentConversation(data.data);\n      }\n    }\n  }, [conversationId, fetchConversation]);\n\n  useEffect(() => {\n    fetchConversationOnMount();\n  }, [fetchConversationOnMount]);\n\n  return {\n    currentConversation,\n    addNewestConversation,\n    removeLatestMessage,\n    loading,\n    ref,\n    setCurrentConversation,\n    addNewestAnswer,\n  };\n};\n\nexport const useSendSharedMessage = (\n  conversation: IClientConversation,\n  addNewestConversation: (message: string) => void,\n  removeLatestMessage: () => void,\n  setCurrentConversation: Dispatch<SetStateAction<IClientConversation>>,\n  addNewestAnswer: (answer: IAnswer) => void,\n) => {\n  const conversationId = conversation.id;\n  const setConversation = useCreateSharedConversation();\n  const { handleInputChange, value, setValue } = useHandleMessageInputChange();\n\n  const { send, answer, done } = useSendMessageWithSse(\n    api.completeExternalConversation,\n  );\n\n  const sendMessage = useCallback(\n    async (message: string, id?: string) => {\n      const res: Response = await send({\n        conversation_id: id ?? conversationId,\n        quote: false,\n        messages: [\n          ...(conversation?.message ?? []).map((x: IMessage) => omit(x, 'id')),\n          {\n            role: MessageType.User,\n            content: message,\n          },\n        ],\n      });\n\n      if (res?.status === 200) {\n        // const data = await fetchConversation(conversationId);\n        // if (data.retcode === 0) {\n        //   setCurrentConversation(data.data);\n        // }\n      } else {\n        // cancel loading\n        setValue(message);\n        removeLatestMessage();\n      }\n    },\n    [\n      conversationId,\n      conversation?.message,\n      // fetchConversation,\n      removeLatestMessage,\n      setValue,\n      send,\n      // setCurrentConversation,\n    ],\n  );\n\n  const handleSendMessage = useCallback(\n    async (message: string) => {\n      if (conversationId !== '') {\n        sendMessage(message);\n      } else {\n        const data = await setConversation('user id');\n        if (data.retcode === 0) {\n          const id = data.data.id;\n          sendMessage(message, id);\n        }\n      }\n    },\n    [conversationId, setConversation, sendMessage],\n  );\n\n  useEffect(() => {\n    if (answer.answer) {\n      addNewestAnswer(answer);\n    }\n  }, [answer, addNewestAnswer]);\n\n  const handlePressEnter = useCallback(() => {\n    if (done) {\n      setValue('');\n      addNewestConversation(value);\n      handleSendMessage(value.trim());\n    }\n  }, [addNewestConversation, done, handleSendMessage, setValue, value]);\n\n  return {\n    handlePressEnter,\n    handleInputChange,\n    value,\n    loading: !done,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chatWrapper\":\"chatWrapper___V2STu\",\"chatContainer\":\"chatContainer___JkSeI\",\"messageContainer\":\"messageContainer___v6SB0\",\"messageItem\":\"messageItem___TrVz4\",\"messageItemSection\":\"messageItemSection___pwRam\",\"messageItemSectionLeft\":\"messageItemSectionLeft___zDs1m\",\"messageItemSectionRight\":\"messageItemSectionRight___ur1Xe\",\"messageItemContent\":\"messageItemContent___UoYrp\",\"messageItemContentReverse\":\"messageItemContentReverse___ExQIi\",\"messageText\":\"messageText___OnPWu\",\"messageEmpty\":\"messageEmpty___RS8fF\",\"thumbnailImg\":\"thumbnailImg___ax__e\",\"messageItemLeft\":\"messageItemLeft___VsUha\",\"messageItemRight\":\"messageItemRight___NX0ko\"};","import { ReactComponent as AssistantIcon } from '@/assets/svg/assistant.svg';\nimport { MessageType } from '@/constants/chat';\nimport { useTranslate } from '@/hooks/commonHooks';\nimport { IReference, Message } from '@/interfaces/database/chat';\nimport { Avatar, Button, Flex, Input, List, Spin } from 'antd';\nimport classNames from 'classnames';\n\nimport NewDocumentLink from '@/components/new-document-link';\nimport SvgIcon from '@/components/svg-icon';\nimport { useGetDocumentUrl } from '@/hooks/documentHooks';\nimport { useSelectFileThumbnails } from '@/hooks/knowledgeHook';\nimport { getExtension, isPdf } from '@/utils/documentUtils';\nimport { forwardRef, useMemo } from 'react';\nimport MarkdownContent from '../markdown-content';\nimport {\n  useCreateSharedConversationOnMount,\n  useSelectCurrentSharedConversation,\n  useSendSharedMessage,\n} from '../shared-hooks';\nimport { buildMessageItemReference } from '../utils';\nimport styles from './index.less';\n\nconst MessageItem = ({\n  item,\n  reference,\n  loading = false,\n}: {\n  item: Message;\n  reference: IReference;\n  loading?: boolean;\n}) => {\n  const isAssistant = item.role === MessageType.Assistant;\n  const { t } = useTranslate('chat');\n  const fileThumbnails = useSelectFileThumbnails();\n  const getDocumentUrl = useGetDocumentUrl();\n\n  const referenceDocumentList = useMemo(() => {\n    return reference?.doc_aggs ?? [];\n  }, [reference?.doc_aggs]);\n\n  const content = useMemo(() => {\n    let text = item.content;\n    if (text === '') {\n      text = t('searching');\n    }\n    return loading ? text?.concat('~~2$$') : text;\n  }, [item.content, loading, t]);\n\n  return (\n    <div\n      className={classNames(styles.messageItem, {\n        [styles.messageItemLeft]: item.role === MessageType.Assistant,\n        [styles.messageItemRight]: item.role === MessageType.User,\n      })}\n    >\n      <section\n        className={classNames(styles.messageItemSection, {\n          [styles.messageItemSectionLeft]: item.role === MessageType.Assistant,\n          [styles.messageItemSectionRight]: item.role === MessageType.User,\n        })}\n      >\n        <div\n          className={classNames(styles.messageItemContent, {\n            [styles.messageItemContentReverse]: item.role === MessageType.User,\n          })}\n        >\n          {item.role === MessageType.User ? (\n            <Avatar\n              size={40}\n              src={\n                'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n              }\n            />\n          ) : (\n            <AssistantIcon></AssistantIcon>\n          )}\n          <Flex vertical gap={8} flex={1}>\n            <b>{isAssistant ? '' : 'You'}</b>\n            <div className={styles.messageText}>\n              <MarkdownContent\n                reference={reference}\n                clickDocumentButton={() => {}}\n                content={content}\n              ></MarkdownContent>\n            </div>\n            {isAssistant && referenceDocumentList.length > 0 && (\n              <List\n                bordered\n                dataSource={referenceDocumentList}\n                renderItem={(item) => {\n                  const fileThumbnail = fileThumbnails[item.doc_id];\n                  const fileExtension = getExtension(item.doc_name);\n                  return (\n                    <List.Item>\n                      <Flex gap={'small'} align=\"center\">\n                        {fileThumbnail ? (\n                          <img\n                            src={fileThumbnail}\n                            className={styles.thumbnailImg}\n                          ></img>\n                        ) : (\n                          <SvgIcon\n                            name={`file-icon/${fileExtension}`}\n                            width={24}\n                          ></SvgIcon>\n                        )}\n\n                        <NewDocumentLink\n                          link={getDocumentUrl(item.doc_id)}\n                          preventDefault={!isPdf(item.doc_name)}\n                        >\n                          {item.doc_name}\n                        </NewDocumentLink>\n                      </Flex>\n                    </List.Item>\n                  );\n                }}\n              />\n            )}\n          </Flex>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nconst ChatContainer = () => {\n  const { t } = useTranslate('chat');\n  const { conversationId } = useCreateSharedConversationOnMount();\n  const {\n    currentConversation: conversation,\n    addNewestConversation,\n    removeLatestMessage,\n    ref,\n    loading,\n    setCurrentConversation,\n    addNewestAnswer,\n  } = useSelectCurrentSharedConversation(conversationId);\n\n  const {\n    handlePressEnter,\n    handleInputChange,\n    value,\n    loading: sendLoading,\n  } = useSendSharedMessage(\n    conversation,\n    addNewestConversation,\n    removeLatestMessage,\n    setCurrentConversation,\n    addNewestAnswer,\n  );\n\n  return (\n    <>\n      <Flex flex={1} className={styles.chatContainer} vertical>\n        <Flex flex={1} vertical className={styles.messageContainer}>\n          <div>\n            <Spin spinning={loading}>\n              {conversation?.message?.map((message, i) => {\n                return (\n                  <MessageItem\n                    key={message.id}\n                    item={message}\n                    reference={buildMessageItemReference(conversation, message)}\n                    loading={\n                      message.role === MessageType.Assistant &&\n                      sendLoading &&\n                      conversation?.message.length - 1 === i\n                    }\n                  ></MessageItem>\n                );\n              })}\n            </Spin>\n          </div>\n          <div ref={ref} />\n        </Flex>\n        <Input\n          size=\"large\"\n          placeholder={t('sendPlaceholder')}\n          value={value}\n          //   disabled={disabled}\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={handlePressEnter}\n              loading={sendLoading}\n              //   disabled={disabled}\n            >\n              {t('send')}\n            </Button>\n          }\n          onPressEnter={handlePressEnter}\n          onChange={handleInputChange}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default forwardRef(ChatContainer);\n","import ChatContainer from './large';\n\nimport styles from './index.less';\n\nconst SharedChat = () => {\n  return (\n    <div className={styles.chatWrapper}>\n      <ChatContainer></ChatContainer>\n    </div>\n  );\n};\n\nexport default SharedChat;\n","const extendsObject = function () {\n  const result = Object.assign({}, arguments.length <= 0 ? undefined : arguments[0]);\n  for (let i = 1; i < arguments.length; i++) {\n    const obj = i < 0 || arguments.length <= i ? undefined : arguments[i];\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        const val = obj[key];\n        if (val !== undefined) {\n          result[key] = val;\n        }\n      });\n    }\n  }\n  return result;\n};\nexport default extendsObject;"],"names":["LeftOutlined","props","ref","AntdIcon","RightOutlined","useCreateSharedConversationOnMount","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","currentQueryParameters","_useState","useState","_useState2","conversationId","setConversationId","createConversation","useCreateSharedConversation","sharedId","get","userId","setConversation","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","data","id","wrap","_context","prev","next","console","info","undefined","sent","stop","useEffect","useSelectCurrentSharedConversation","_useState3","_useState4","currentConversation","setCurrentConversation","fetchConversation","useFetchSharedConversation","loading","useOneNamespaceEffectsLoading","useScrollToBottom","addNewestConversation","message","pre","_pre$message","_objectSpread","concat","_toConsumableArray","role","MessageType","User","content","uuid","Assistant","reference","addNewestAnswer","answer","_pre$message2","latestMessage","at","slice","removeLatestMessage","nextMessages","fetchConversationOnMount","_callee2","_context2","retcode","useSendSharedMessage","conversation","_useHandleMessageInpu","useHandleMessageInputChange","handleInputChange","value","setValue","_useSendMessageWithSs","useSendMessageWithSse","api","completeExternalConversation","send","done","sendMessage","_ref3","_callee3","_conversation$message","res","_context3","conversation_id","quote","messages","map","x","omit","status","_x","_x2","apply","arguments","handleSendMessage","_ref4","_callee4","_context4","_x3","handlePressEnter","trim","MessageItem","_ref","item","_ref$loading","isAssistant","_useTranslate","useTranslate","t","fileThumbnails","useSelectFileThumbnails","getDocumentUrl","useGetDocumentUrl","referenceDocumentList","useMemo","_reference$doc_aggs","doc_aggs","_text","text","_jsx","className","classNames","styles","messageItem","_defineProperty","messageItemLeft","messageItemRight","children","messageItemSection","messageItemSectionLeft","messageItemSectionRight","_jsxs","messageItemContent","messageItemContentReverse","Avatar","size","src","AssistantIcon","Flex","vertical","gap","flex","messageText","MarkdownContent","clickDocumentButton","length","List","bordered","dataSource","renderItem","fileThumbnail","doc_id","fileExtension","getExtension","doc_name","Item","align","thumbnailImg","SvgIcon","name","width","NewDocumentLink","link","preventDefault","isPdf","ChatContainer","_useTranslate2","_useCreateSharedConve","_useSelectCurrentShar","_useSendSharedMessage","sendLoading","_Fragment","chatContainer","messageContainer","Spin","spinning","i","buildMessageItemReference","Input","placeholder","suffix","Button","type","onClick","onPressEnter","onChange","forwardRef","SharedChat","chatWrapper","extendsObject","result","obj","key","val"],"sourceRoot":""}