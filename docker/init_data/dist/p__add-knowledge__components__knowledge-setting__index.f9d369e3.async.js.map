{"version":3,"file":"p__add-knowledge__components__knowledge-setting__index.f9d369e3.async.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons/es/components/Icon.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/PlusOutlined.js","webpack:///./src/components/layout-recognize.tsx","webpack:///./src/components/max-token-number.tsx","webpack:///./src/components/parse-configuration/index.tsx","webpack:///./src/hooks/knowledgeHook.ts","webpack:///./src/hooks/routeHook.ts","webpack:///./src/pages/add-knowledge/components/knowledge-setting/index.less?72c9","webpack:///./src/pages/add-knowledge/components/knowledge-setting/utils.ts","webpack:///./src/pages/add-knowledge/components/knowledge-setting/category-panel.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/hooks.ts","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/index.tsx","webpack:///./src/pages/add-knowledge/constant.ts","webpack:///./src/utils/fileUtil.ts","webpack:///./node_modules/antd/es/col/index.js","webpack:///./node_modules/antd/es/row/index.js","webpack:///./node_modules/lodash/_baseRandom.js","webpack:///./node_modules/lodash/random.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\"];\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nvar Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n    Component = props.component,\n    viewBox = props.viewBox,\n    spin = props.spin,\n    rotate = props.rotate,\n    tabIndex = props.tabIndex,\n    onClick = props.onClick,\n    children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var iconRef = React.useRef();\n  var mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  var _React$useContext = React.useContext(Context),\n    _React$useContext$pre = _React$useContext.prefixCls,\n    prefixCls = _React$useContext$pre === void 0 ? 'anticon' : _React$useContext$pre,\n    rootClassName = _React$useContext.rootClassName;\n  var classString = classNames(rootClassName, prefixCls, className);\n  var svgClassString = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-spin\"), !!spin));\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n  var innerSvgProps = _objectSpread(_objectSpread({}, svgBaseProps), {}, {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  var renderInnerNode = function renderInnerNode() {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  var iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M192 474h672q8 0 8 8v60q0 8-8 8H160q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PlusOutlined.displayName = 'PlusOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","import { useTranslate } from '@/hooks/commonHooks';\nimport { Form, Switch } from 'antd';\n\nconst LayoutRecognize = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  return (\n    <Form.Item\n      name={['parser_config', 'layout_recognize']}\n      label={t('layoutRecognize')}\n      initialValue={true}\n      valuePropName=\"checked\"\n      tooltip={t('layoutRecognizeTip')}\n    >\n      <Switch />\n    </Form.Item>\n  );\n};\n\nexport default LayoutRecognize;\n","import { useTranslate } from '@/hooks/commonHooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\nconst MaxTokenNumber = () => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form.Item label={t('chunkTokenNumber')} tooltip={t('chunkTokenNumberTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'chunk_token_num']}\n            noStyle\n            initialValue={128}\n            rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n          >\n            <Slider max={2048} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item\n          name={['parser_config', 'chunk_token_num']}\n          noStyle\n          rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n        >\n          <InputNumber max={2048} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport default MaxTokenNumber;\n","import { useTranslate } from '@/hooks/commonHooks';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  InputNumber,\n  Slider,\n  Switch,\n} from 'antd';\nimport random from 'lodash/random';\n\nexport const excludedParseMethods = ['table', 'resume', 'one',\"picture\"];\n\nexport const showRaptorParseConfiguration = (parserId: string) => {\n  return !excludedParseMethods.includes(parserId);\n};\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst ParseConfiguration = () => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const handleGenerate = () => {\n    form.setFieldValue(\n      ['parser_config', 'raptor', 'random_seed'],\n      random(10000),\n    );\n  };\n\n  return (\n    <>\n      <Divider></Divider>\n      <Form.Item\n        name={['parser_config', 'raptor', 'use_raptor']}\n        label={t('useRaptor')}\n        initialValue={false}\n        valuePropName=\"checked\"\n        tooltip={t('useRaptorTip')}\n      >\n        <Switch />\n      </Form.Item>\n      <Form.Item\n        shouldUpdate={(prevValues, curValues) =>\n          prevValues.parser_config.raptor.use_raptor !==\n          curValues.parser_config.raptor.use_raptor\n        }\n      >\n        {({ getFieldValue }) => {\n          const useRaptor = getFieldValue([\n            'parser_config',\n            'raptor',\n            'use_raptor',\n          ]);\n\n          return (\n            useRaptor && (\n              <>\n                <Form.Item\n                  name={['parser_config', 'raptor', 'prompt']}\n                  label={t('prompt')}\n                  initialValue={t('promptText')}\n                  tooltip={t('promptTip')}\n                  rules={[\n                    {\n                      required: true,\n                      message: t('promptMessage'),\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={8} />\n                </Form.Item>\n                <Form.Item label={t('maxToken')} tooltip={t('maxTokenTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_token']}\n                        noStyle\n                        initialValue={256}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxTokenMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider max={2048} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_token']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxTokenMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={2048} min={0} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('threshold')} tooltip={t('thresholdTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'threshold']}\n                        noStyle\n                        initialValue={0.1}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('thresholdMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider\n                          min={0}\n                          max={1}\n                          style={{ width: '100%' }}\n                          step={0.01}\n                        />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'threshold']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('thresholdMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1} min={0} step={0.01} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('maxCluster')} tooltip={t('maxClusterTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_cluster']}\n                        noStyle\n                        initialValue={64}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxClusterMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider min={1} max={1024} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_cluster']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxClusterMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1024} min={1} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('randomSeed')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'random_seed']}\n                        noStyle\n                        initialValue={0}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('randomSeedMessage'),\n                          },\n                        ]}\n                      >\n                        <InputNumber style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item noStyle>\n                      <Button type=\"primary\" onClick={handleGenerate}>\n                        <PlusOutlined />\n                      </Button>\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n              </>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ParseConfiguration;\n","import { useShowDeleteConfirm } from '@/hooks/commonHooks';\nimport { IKnowledge } from '@/interfaces/database/knowledge';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSearchParams, useSelector } from 'umi';\nimport { useGetKnowledgeSearchParams } from './routeHook';\nimport { useOneNamespaceEffectsLoading } from './storeHooks';\n\nexport const useKnowledgeBaseId = (): string => {\n  const [searchParams] = useSearchParams();\n  const knowledgeBaseId = searchParams.get('id');\n\n  return knowledgeBaseId || '';\n};\n\nexport const useDeleteDocumentById = (): {\n  removeDocument: (documentId: string) => Promise<number>;\n} => {\n  const dispatch = useDispatch();\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const removeDocument = (documentId: string) => () => {\n    return dispatch({\n      type: 'kFModel/document_rm',\n      payload: {\n        doc_id: documentId,\n        kb_id: knowledgeBaseId,\n      },\n    });\n  };\n\n  const onRmDocument = (documentId: string): Promise<number> => {\n    return showDeleteConfirm({ onOk: removeDocument(documentId) });\n  };\n\n  return {\n    removeDocument: onRmDocument,\n  };\n};\n\nexport const useFetchKnowledgeDetail = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const fetchKnowledgeDetail = useCallback(\n    (knowledgeId: string) => {\n      dispatch({\n        type: 'knowledgeModel/getKnowledgeDetail',\n        payload: { kb_id: knowledgeId },\n      });\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    fetchKnowledgeDetail(knowledgeId);\n  }, [fetchKnowledgeDetail, knowledgeId]);\n\n  return fetchKnowledgeDetail;\n};\n\nexport const useSelectKnowledgeDetail = () => {\n  const knowledge: IKnowledge = useSelector(\n    (state: any) => state.knowledgeModel.knowledge,\n  );\n\n  return knowledge;\n};\n\nexport const useGetDocumentDefaultParser = () => {\n  const item = useSelectKnowledgeDetail();\n\n  return {\n    defaultParserId: item?.parser_id ?? '',\n    parserConfig: item?.parser_config ?? '',\n  };\n};\n\nexport const useDeleteChunkByIds = (): {\n  removeChunk: (chunkIds: string[], documentId: string) => Promise<number>;\n} => {\n  const dispatch = useDispatch();\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const removeChunk = useCallback(\n    (chunkIds: string[], documentId: string) => () => {\n      return dispatch({\n        type: 'chunkModel/rm_chunk',\n        payload: {\n          chunk_ids: chunkIds,\n          doc_id: documentId,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const onRemoveChunk = useCallback(\n    (chunkIds: string[], documentId: string): Promise<number> => {\n      return showDeleteConfirm({ onOk: removeChunk(chunkIds, documentId) });\n    },\n    [removeChunk, showDeleteConfirm],\n  );\n\n  return {\n    removeChunk: onRemoveChunk,\n  };\n};\n\nexport const useFetchKnowledgeBaseConfiguration = () => {\n  const dispatch = useDispatch();\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const fetchKnowledgeBaseConfiguration = useCallback(() => {\n    dispatch({\n      type: 'kSModel/getKbDetail',\n      payload: {\n        kb_id: knowledgeBaseId,\n      },\n    });\n  }, [dispatch, knowledgeBaseId]);\n\n  useEffect(() => {\n    fetchKnowledgeBaseConfiguration();\n  }, [fetchKnowledgeBaseConfiguration]);\n};\n\nexport const useSelectKnowledgeList = () => {\n  const knowledgeModel = useSelector((state) => state.knowledgeModel);\n  const { data = [] } = knowledgeModel;\n  return data;\n};\n\nexport const useFetchKnowledgeList = (\n  shouldFilterListWithoutDocument: boolean = false,\n) => {\n  const dispatch = useDispatch();\n  const loading = useOneNamespaceEffectsLoading('knowledgeModel', ['getList']);\n\n  const knowledgeModel = useSelector((state) => state.knowledgeModel);\n  const { data = [] } = knowledgeModel;\n  const list: IKnowledge[] = useMemo(() => {\n    return shouldFilterListWithoutDocument\n      ? data.filter((x: IKnowledge) => x.chunk_num > 0)\n      : data;\n  }, [data, shouldFilterListWithoutDocument]);\n\n  const fetchList = useCallback(() => {\n    dispatch({\n      type: 'knowledgeModel/getList',\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchList();\n  }, [fetchList]);\n\n  return { list, loading, fetchList };\n};\n\nexport const useSelectFileThumbnails = () => {\n  const fileThumbnails: Record<string, string> = useSelector(\n    (state: any) => state.kFModel.fileThumbnails,\n  );\n\n  return fileThumbnails;\n};\n\nexport const useFetchFileThumbnails = (docIds?: Array<string>) => {\n  const dispatch = useDispatch();\n  const fileThumbnails = useSelectFileThumbnails();\n\n  const fetchFileThumbnails = useCallback(\n    (docIds: Array<string>) => {\n      dispatch({\n        type: 'kFModel/fetch_document_thumbnails',\n        payload: { doc_ids: docIds.join(',') },\n      });\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    if (docIds) {\n      fetchFileThumbnails(docIds);\n    }\n  }, [docIds, fetchFileThumbnails]);\n\n  return { fileThumbnails, fetchFileThumbnails };\n};\n\n//#region knowledge configuration\n\nexport const useUpdateKnowledge = () => {\n  const dispatch = useDispatch();\n\n  const saveKnowledgeConfiguration = useCallback(\n    (payload: any) => {\n      dispatch({\n        type: 'kSModel/updateKb',\n        payload,\n      });\n    },\n    [dispatch],\n  );\n\n  return saveKnowledgeConfiguration;\n};\n\nexport const useSelectKnowledgeDetails = () => {\n  const knowledgeDetails: IKnowledge = useSelector(\n    (state: any) => state.kSModel.knowledgeDetails,\n  );\n  return knowledgeDetails;\n};\n//#endregion\n\n//#region Retrieval testing\n\nexport const useTestChunkRetrieval = () => {\n  const dispatch = useDispatch();\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const testChunk = useCallback(\n    (values: any) => {\n      dispatch({\n        type: 'testingModel/testDocumentChunk',\n        payload: {\n          ...values,\n          kb_id: knowledgeBaseId,\n        },\n      });\n    },\n    [dispatch, knowledgeBaseId],\n  );\n\n  return testChunk;\n};\n//#endregion\n","import {\n  KnowledgeRouteKey,\n  KnowledgeSearchParams,\n} from '@/constants/knowledge';\nimport { useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'umi';\n\nexport enum SegmentIndex {\n  Second = '2',\n  Third = '3',\n}\n\nexport const useSegmentedPathName = (index: SegmentIndex) => {\n  const { pathname } = useLocation();\n\n  const pathArray = pathname.split('/');\n  return pathArray[index] || '';\n};\n\nexport const useSecondPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Second);\n};\n\nexport const useThirdPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Third);\n};\n\nexport const useGetKnowledgeSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    documentId:\n      currentQueryParameters.get(KnowledgeSearchParams.DocumentId) || '',\n    knowledgeId:\n      currentQueryParameters.get(KnowledgeSearchParams.KnowledgeId) || '',\n  };\n};\n\nexport const useNavigateWithFromState = () => {\n  const navigate = useNavigate();\n  return useCallback(\n    (path: string) => {\n      navigate(path, { state: { from: path } });\n    },\n    [navigate],\n  );\n};\n\nexport const useNavigateToDataset = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  return useCallback(() => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeId}`);\n  }, [knowledgeId, navigate]);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tags\":\"tags___B6FHw\",\"preset\":\"preset___ZojTE\",\"left\":\"left___EOFZO\",\"right\":\"right___kHLZk\",\"configurationWrapper\":\"configurationWrapper___I5Kdy\",\"buttonWrapper\":\"buttonWrapper___k6eVW\",\"variableSlider\":\"variableSlider___lkA3D\",\"categoryPanelWrapper\":\"categoryPanelWrapper___yI4rY\",\"topTitle\":\"topTitle___tNiB9\",\"imageRow\":\"imageRow___C3Xpb\",\"image\":\"image___D0j7I\"};","const getImageName = (prefix: string, length: number) =>\n  new Array(length)\n    .fill(0)\n    .map((x, idx) => `chunk-method/${prefix}-0${idx + 1}`);\n\nexport const ImageMap = {\n  book: getImageName('book', 4),\n  laws: getImageName('law', 2),\n  manual: getImageName('manual', 4),\n  picture: getImageName('media', 2),\n  naive: getImageName('naive', 2),\n  paper: getImageName('paper', 2),\n  presentation: getImageName('presentation', 2),\n  qa: getImageName('qa', 2),\n  resume: getImageName('resume', 2),\n  table: getImageName('table', 2),\n  one: getImageName('one', 2),\n};\n\nexport const TextMap = {\n  book: {\n    title: '',\n    description: `<p>Supported file formats are <b>DOCX</b>, <b>PDF</b>, <b>TXT</b>.</p><p>\n  Since a book is long and not all the parts are useful, if it's a PDF,\n  please setup the <i>page ranges</i> for every book in order eliminate negative effects and save computing time for analyzing.</p>`,\n  },\n  laws: {\n    title: '',\n    description: `<p>Supported file formats are <b>DOCX</b>, <b>PDF</b>, <b>TXT</b>.</p><p>\n    Legal documents have a very rigorous writing format. We use text feature to detect split point. \n    </p><p>\n    The chunk granularity is consistent with 'ARTICLE', and all the upper level text will be included in the chunk.\n    </p>`,\n  },\n  manual: {\n    title: '',\n    description: `<p>Only <b>PDF</b> is supported.</p><p>\n  We assume manual has hierarchical section structure. We use the lowest section titles as pivots to slice documents.\n  So, the figures and tables in the same section will not be sliced apart, and chunk size might be large.\n  </p>`,\n  },\n  naive: {\n    title: '',\n    description: `<p>Supported file formats are <b>DOCX, EXCEL, PPT, IMAGE, PDF, TXT</b>.</p>\n  <p>This method apply the naive ways to chunk files: </p>\n  <p>\n  <li>Successive text will be sliced into pieces using vision detection model.</li>\n  <li>Next, these successive pieces are merge into chunks whose token number is no more than 'Token number'.</li></p>`,\n  },\n  paper: {\n    title: '',\n    description: `<p>Only <b>PDF</b> file is supported.</p><p>\n    If our model works well, the paper will be sliced by it's sections, like <i>abstract, 1.1, 1.2</i>, etc. </p><p>\n    The benefit of doing this is that LLM can better summarize the content of relevant sections in the paper, \n    resulting in more comprehensive answers that help readers better understand the paper. \n    The downside is that it increases the context of the LLM conversation and adds computational cost, \n    so during the conversation, you can consider reducing the ‘<b>topN</b>’ setting.</p>`,\n  },\n  presentation: {\n    title: '',\n    description: `<p>The supported file formats are <b>PDF</b>, <b>PPTX</b>.</p><p>\n  Every page will be treated as a chunk. And the thumbnail of every page will be stored.</p><p>\n  <i>All the PPT files you uploaded will be chunked by using this method automatically, setting-up for every PPT file is not necessary.</i></p>`,\n  },\n  qa: {\n    title: '',\n    description: `<p><b>EXCEL</b> and <b>CSV/TXT</b> files are supported.</p><p>\n  If the file is in excel format, there should be 2 columns question and answer without header.\n  And question column is ahead of answer column.\n  And it's O.K if it has multiple sheets as long as the columns are rightly composed.</p><p>\n\n  If it's in csv format, it should be UTF-8 encoded. Use TAB as delimiter to separate question and answer.</p><p>\n\n  <i>All the deformed lines will be ignored.\n  Every pair of Q&A will be treated as a chunk.</i></p>`,\n  },\n  resume: {\n    title: '',\n    description: `<p>The supported file formats are <b>DOCX</b>, <b>PDF</b>, <b>TXT</b>.\n    </p><p>\n    The résumé comes in a variety of formats, just like a person’s personality, but we often have to organize them into structured data that makes it easy to search.\n    </p><p>\n    Instead of chunking the résumé, we parse the résumé into structured data. As a HR, you can dump all the résumé you have, \n    the you can list all the candidates that match the qualifications just by talk with <i>'RAGFlow'</i>.\n    </p>\n    `,\n  },\n  table: {\n    title: '',\n    description: `<p><b>EXCEL</b> and <b>CSV/TXT</b> format files are supported.</p><p>\n    Here're some tips:\n    <ul>\n  <li>For csv or txt file, the delimiter between columns is <em><b>TAB</b></em>.</li>\n  <li>The first line must be column headers.</li>\n  <li>Column headers must be meaningful terms in order to make our LLM understanding.\n  It's good to enumerate some synonyms using slash <i>'/'</i> to separate, and even better to\n  enumerate values using brackets like <i>'gender/sex(male, female)'</i>.<p>\n  Here are some examples for headers:<ol>\n      <li>supplier/vendor<b>'TAB'</b>color(yellow, red, brown)<b>'TAB'</b>gender/sex(male, female)<b>'TAB'</b>size(M,L,XL,XXL)</li>\n      <li>姓名/名字<b>'TAB'</b>电话/手机/微信<b>'TAB'</b>最高学历（高中，职高，硕士，本科，博士，初中，中技，中专，专科，专升本，MPA，MBA，EMBA）</li>\n      </ol>\n      </p>\n  </li>\n  <li>Every row in table will be treated as a chunk.</li>\n  </ul>`,\n  },\n  picture: {\n    title: '',\n    description: `\n  <p>Image files are supported. Video is coming soon.</p><p>\n  If the picture has text in it, OCR is applied to extract the text as its text description.\n  </p><p>\n  If the text extracted by OCR is not enough, visual LLM is used to get the descriptions.\n  </p>`,\n  },\n  one: {\n    title: '',\n    description: `\n  <p>Supported file formats are <b>DOCX, EXCEL, PDF, TXT</b>.\n  </p><p>\n  For a document, it will be treated as an entire chunk, no split at all.\n  </p><p>\n  If you want to summarize something that needs all the context of an article and the selected LLM's context length covers the document length, you can try this method.\n  </p>`,\n  },\n};\n","import SvgIcon from '@/components/svg-icon';\nimport { useTranslate } from '@/hooks/commonHooks';\nimport { useSelectParserList } from '@/hooks/userSettingHook';\nimport { Col, Divider, Empty, Row, Typography } from 'antd';\nimport { useMemo } from 'react';\nimport styles from './index.less';\nimport { ImageMap } from './utils';\n\nconst { Title, Text } = Typography;\n\nconst CategoryPanel = ({ chunkMethod }: { chunkMethod: string }) => {\n  const parserList = useSelectParserList();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const item = useMemo(() => {\n    const item = parserList.find((x) => x.value === chunkMethod);\n    if (item) {\n      return {\n        title: item.label,\n        description: t(item.value),\n      };\n    }\n    return { title: '', description: '' };\n  }, [parserList, chunkMethod, t]);\n\n  const imageList = useMemo(() => {\n    if (chunkMethod in ImageMap) {\n      return ImageMap[chunkMethod as keyof typeof ImageMap];\n    }\n    return [];\n  }, [chunkMethod]);\n\n  return (\n    <section className={styles.categoryPanelWrapper}>\n      {imageList.length > 0 ? (\n        <>\n          <Title level={5} className={styles.topTitle}>\n            \"{item.title}\" {t('methodTitle')}\n          </Title>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: item.description,\n            }}\n          ></p>\n          <Title level={5}>\n            \"{item.title}\" {t('methodExamples')}\n          </Title>\n          <Text>{t('methodExamplesDescription')}</Text>\n          <Row gutter={[10, 10]} className={styles.imageRow}>\n            {imageList.map((x) => (\n              <Col span={12} key={x}>\n                <SvgIcon\n                  name={x}\n                  width={'100%'}\n                  className={styles.image}\n                ></SvgIcon>\n              </Col>\n            ))}\n          </Row>\n          <Title level={5}>\n            {item.title} {t('dialogueExamplesTitle')}\n          </Title>\n          <Divider></Divider>\n        </>\n      ) : (\n        <Empty description={''} image={null}>\n          <p>{t('methodEmpty')}</p>\n          <SvgIcon name={'chunk-method/chunk-empty'} width={'100%'}></SvgIcon>\n        </Empty>\n      )}\n    </section>\n  );\n};\n\nexport default CategoryPanel;\n","import {\n  useFetchKnowledgeBaseConfiguration,\n  useKnowledgeBaseId,\n  useSelectKnowledgeDetails,\n  useUpdateKnowledge,\n} from '@/hooks/knowledgeHook';\nimport { useFetchLlmList, useSelectLlmOptions } from '@/hooks/llmHooks';\nimport { useNavigateToDataset } from '@/hooks/routeHook';\nimport { useOneNamespaceEffectsLoading } from '@/hooks/storeHooks';\nimport {\n  useFetchTenantInfo,\n  useSelectParserList,\n} from '@/hooks/userSettingHook';\nimport {\n  getBase64FromUploadFileList,\n  getUploadFileListFromBase64,\n} from '@/utils/fileUtil';\nimport { Form, UploadFile } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport pick from 'lodash/pick';\nimport { useCallback, useEffect } from 'react';\nimport { LlmModelType } from '../../constant';\n\nexport const useSubmitKnowledgeConfiguration = (form: FormInstance) => {\n  const save = useUpdateKnowledge();\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const submitLoading = useOneNamespaceEffectsLoading('kSModel', ['updateKb']);\n  const navigateToDataset = useNavigateToDataset();\n\n  const submitKnowledgeConfiguration = useCallback(async () => {\n    const values = await form.validateFields();\n    const avatar = await getBase64FromUploadFileList(values.avatar);\n    save({\n      ...values,\n      avatar,\n      kb_id: knowledgeBaseId,\n    });\n    navigateToDataset();\n  }, [save, knowledgeBaseId, form, navigateToDataset]);\n\n  return { submitKnowledgeConfiguration, submitLoading, navigateToDataset };\n};\n\nexport const useFetchKnowledgeConfigurationOnMount = (form: FormInstance) => {\n  const knowledgeDetails = useSelectKnowledgeDetails();\n  const parserList = useSelectParserList();\n  const embeddingModelOptions = useSelectLlmOptions();\n\n  useFetchTenantInfo();\n  useFetchKnowledgeBaseConfiguration();\n  useFetchLlmList(LlmModelType.Embedding);\n\n  useEffect(() => {\n    const fileList: UploadFile[] = getUploadFileListFromBase64(\n      knowledgeDetails.avatar,\n    );\n    form.setFieldsValue({\n      ...pick(knowledgeDetails, [\n        'description',\n        'name',\n        'permission',\n        'embd_id',\n        'parser_id',\n        'language',\n        'parser_config',\n      ]),\n      avatar: fileList,\n    });\n  }, [form, knowledgeDetails]);\n\n  return {\n    parserList,\n    embeddingModelOptions,\n    disabled: knowledgeDetails.chunk_num > 0,\n  };\n};\n\nexport const useSelectKnowledgeDetailsLoading = () =>\n  useOneNamespaceEffectsLoading('kSModel', ['getKbDetail']);\n\nexport const useHandleChunkMethodChange = () => {\n  const [form] = Form.useForm();\n  const chunkMethod = Form.useWatch('parser_id', form);\n\n  return { form, chunkMethod };\n};\n","import { normFile } from '@/utils/fileUtil';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Radio, Select, Space, Upload } from 'antd';\nimport {\n  useFetchKnowledgeConfigurationOnMount,\n  useSubmitKnowledgeConfiguration,\n} from './hooks';\n\nimport LayoutRecognize from '@/components/layout-recognize';\nimport MaxTokenNumber from '@/components/max-token-number';\nimport ParseConfiguration, {\n  showRaptorParseConfiguration,\n} from '@/components/parse-configuration';\nimport { useTranslate } from '@/hooks/commonHooks';\nimport { FormInstance } from 'antd/lib';\nimport styles from './index.less';\n\nconst { Option } = Select;\n\nconst ConfigurationForm = ({ form }: { form: FormInstance }) => {\n  const { submitKnowledgeConfiguration, submitLoading, navigateToDataset } =\n    useSubmitKnowledgeConfiguration(form);\n  const { parserList, embeddingModelOptions, disabled } =\n    useFetchKnowledgeConfigurationOnMount(form);\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form form={form} name=\"validateOnly\" layout=\"vertical\" autoComplete=\"off\">\n      <Form.Item name=\"name\" label={t('name')} rules={[{ required: true }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"avatar\"\n        label={t('photo')}\n        valuePropName=\"fileList\"\n        getValueFromEvent={normFile}\n      >\n        <Upload\n          listType=\"picture-card\"\n          maxCount={1}\n          beforeUpload={() => false}\n          showUploadList={{ showPreviewIcon: false, showRemoveIcon: false }}\n        >\n          <button style={{ border: 0, background: 'none' }} type=\"button\">\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>{t('upload')}</div>\n          </button>\n        </Upload>\n      </Form.Item>\n      <Form.Item name=\"description\" label={t('description')}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label={t('language')}\n        name=\"language\"\n        initialValue={'English'}\n        rules={[{ required: true, message: t('languageMessage') }]}\n      >\n        <Select placeholder={t('languagePlaceholder')}>\n          <Option value=\"English\">{t('english')}</Option>\n          <Option value=\"Chinese\">{t('chinese')}</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name=\"permission\"\n        label={t('permissions')}\n        tooltip={t('permissionsTip')}\n        rules={[{ required: true }]}\n      >\n        <Radio.Group>\n          <Radio value=\"me\">{t('me')}</Radio>\n          <Radio value=\"team\">{t('team')}</Radio>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item\n        name=\"embd_id\"\n        label={t('embeddingModel')}\n        rules={[{ required: true }]}\n        tooltip={t('embeddingModelTip')}\n      >\n        <Select\n          placeholder={t('embeddingModelPlaceholder')}\n          options={embeddingModelOptions}\n          disabled={disabled}\n        ></Select>\n      </Form.Item>\n      <Form.Item\n        name=\"parser_id\"\n        label={t('chunkMethod')}\n        tooltip={t('chunkMethodTip')}\n        rules={[{ required: true }]}\n      >\n        <Select placeholder={t('chunkMethodPlaceholder')} disabled={disabled}>\n          {parserList.map((x) => (\n            <Option value={x.value} key={x.value}>\n              {x.label}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item noStyle dependencies={['parser_id']}>\n        {({ getFieldValue }) => {\n          const parserId = getFieldValue('parser_id');\n\n          return (\n            <>\n              {parserId === 'naive' && (\n                <>\n                  <MaxTokenNumber></MaxTokenNumber>\n                  <LayoutRecognize></LayoutRecognize>\n                </>\n              )}\n              {showRaptorParseConfiguration(parserId) && (\n                <ParseConfiguration></ParseConfiguration>\n              )}\n            </>\n          );\n        }}\n      </Form.Item>\n\n      <Form.Item>\n        <div className={styles.buttonWrapper}>\n          <Space>\n            <Button size={'middle'} onClick={navigateToDataset}>\n              {t('cancel')}\n            </Button>\n            <Button\n              type=\"primary\"\n              size={'middle'}\n              loading={submitLoading}\n              onClick={submitKnowledgeConfiguration}\n            >\n              {t('save')}\n            </Button>\n          </Space>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ConfigurationForm;\n","import { Col, Divider, Row, Spin, Typography } from 'antd';\r\nimport CategoryPanel from './category-panel';\r\nimport ConfigurationForm from './configuration';\r\nimport {\r\n  useHandleChunkMethodChange,\r\n  useSelectKnowledgeDetailsLoading,\r\n} from './hooks';\r\n\r\nimport { useTranslate } from '@/hooks/commonHooks';\r\nimport styles from './index.less';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Configuration = () => {\r\n  const loading = useSelectKnowledgeDetailsLoading();\r\n  const { form, chunkMethod } = useHandleChunkMethodChange();\r\n  const { t } = useTranslate('knowledgeConfiguration');\r\n\r\n  return (\r\n    <div className={styles.configurationWrapper}>\r\n      <Title level={5}>\r\n        {t('configuration', { keyPrefix: 'knowledgeDetails' })}\r\n      </Title>\r\n      <p>{t('titleDescription')}</p>\r\n      <Divider></Divider>\r\n      <Spin spinning={loading}>\r\n        <Row gutter={32}>\r\n          <Col span={8}>\r\n            <ConfigurationForm form={form}></ConfigurationForm>\r\n          </Col>\r\n          <Col span={16}>\r\n            <CategoryPanel chunkMethod={chunkMethod}></CategoryPanel>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Configuration;\r\n","import { KnowledgeRouteKey } from '@/constants/knowledge';\n\nexport const routeMap = {\n  [KnowledgeRouteKey.Dataset]: 'Dataset',\n  [KnowledgeRouteKey.Testing]: 'Retrieval testing',\n  [KnowledgeRouteKey.Configuration]: 'Configuration',\n};\n\nexport enum KnowledgeDatasetRouteKey {\n  Chunk = 'chunk',\n  File = 'file',\n}\n\nexport const datasetRouteMap = {\n  [KnowledgeDatasetRouteKey.Chunk]: 'Chunk',\n  [KnowledgeDatasetRouteKey.File]: 'File Upload',\n};\n\nexport * from '@/constants/knowledge';\n","import { UploadFile } from 'antd';\n\nexport const transformFile2Base64 = (val: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(val);\n    reader.onload = (): void => {\n      resolve(reader.result);\n    };\n    reader.onerror = reject;\n  });\n};\n\nexport const transformBase64ToFile = (\n  dataUrl: string,\n  filename: string = 'file',\n) => {\n  let arr = dataUrl.split(','),\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n\n  const mime = arr[0].match(/:(.*?);/);\n  const mimeType = mime ? mime[1] : 'image/png';\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\nexport const normFile = (e: any) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nexport const getUploadFileListFromBase64 = (avatar: string) => {\n  let fileList: UploadFile[] = [];\n\n  if (avatar) {\n    fileList = [{ uid: '1', name: 'file', thumbUrl: avatar, status: 'done' }];\n  }\n\n  return fileList;\n};\n\nexport const getBase64FromUploadFileList = async (fileList?: UploadFile[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    const originFileObj = file.originFileObj;\n    if (originFileObj) {\n      const base64 = await transformFile2Base64(originFileObj);\n      return base64;\n    } else {\n      return file.thumbUrl;\n    }\n    // return fileList[0].thumbUrl; TODO: Even JPG files will be converted to base64 parameters in png format\n  }\n\n  return '';\n};\n\nexport const downloadFile = ({\n  url,\n  filename,\n  target,\n}: {\n  url: string;\n  filename?: string;\n  target?: string;\n}) => {\n  const downloadElement = document.createElement('a');\n  downloadElement.style.display = 'none';\n  downloadElement.href = url;\n  if (target) {\n    downloadElement.target = '_blank';\n  }\n  downloadElement.rel = 'noopener noreferrer';\n  if (filename) {\n    downloadElement.download = filename;\n  }\n  document.body.appendChild(downloadElement);\n  downloadElement.click();\n  document.body.removeChild(downloadElement);\n};\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["_excluded","Icon","props","ref","className","Component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","iconRef","mergedRef","_React$useContext","_React$useContext$pre","prefixCls","rootClassName","classString","svgClassString","svgStyle","innerSvgProps","renderInnerNode","iconTabIndex","PlusOutlined","AntdIcon","LayoutRecognize","_useTranslate","useTranslate","t","_jsx","Form","Item","name","label","initialValue","valuePropName","tooltip","Switch","MaxTokenNumber","_jsxs","Flex","gap","align","flex","noStyle","rules","required","message","Slider","max","style","width","InputNumber","min","excludedParseMethods","showRaptorParseConfiguration","parserId","includes","ParseConfiguration","form","useFormInstance","handleGenerate","setFieldValue","random","_Fragment","Divider","shouldUpdate","prevValues","curValues","parser_config","raptor","use_raptor","_ref","getFieldValue","useRaptor","Input","TextArea","rows","step","Button","type","useKnowledgeBaseId","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","knowledgeBaseId","get","useDeleteDocumentById","dispatch","useDispatch","showDeleteConfirm","useShowDeleteConfirm","removeDocument","documentId","payload","doc_id","kb_id","onRmDocument","onOk","useFetchKnowledgeDetail","_useGetKnowledgeSearc","useGetKnowledgeSearchParams","knowledgeId","fetchKnowledgeDetail","useCallback","useEffect","useSelectKnowledgeDetail","knowledge","useSelector","state","knowledgeModel","useGetDocumentDefaultParser","_item$parser_id","_item$parser_config","item","defaultParserId","parser_id","parserConfig","useDeleteChunkByIds","removeChunk","chunkIds","chunk_ids","onRemoveChunk","useFetchKnowledgeBaseConfiguration","fetchKnowledgeBaseConfiguration","useSelectKnowledgeList","_knowledgeModel$data","data","useFetchKnowledgeList","shouldFilterListWithoutDocument","arguments","length","undefined","loading","useOneNamespaceEffectsLoading","_knowledgeModel$data2","list","useMemo","filter","x","chunk_num","fetchList","useSelectFileThumbnails","fileThumbnails","kFModel","useFetchFileThumbnails","docIds","fetchFileThumbnails","doc_ids","join","useUpdateKnowledge","saveKnowledgeConfiguration","useSelectKnowledgeDetails","knowledgeDetails","kSModel","useTestChunkRetrieval","testChunk","values","_objectSpread","SegmentIndex","useSegmentedPathName","index","_useLocation","useLocation","pathname","pathArray","split","useSecondPathName","Second","useThirdPathName","Third","currentQueryParameters","KnowledgeSearchParams","DocumentId","KnowledgeId","useNavigateWithFromState","navigate","useNavigate","path","from","useNavigateToDataset","concat","KnowledgeRouteKey","Dataset","getImageName","prefix","Array","fill","map","idx","ImageMap","book","laws","manual","picture","naive","paper","presentation","qa","resume","table","one","TextMap","title","description","Title","Typography","Text","CategoryPanel","chunkMethod","parserList","useSelectParserList","find","value","imageList","styles","categoryPanelWrapper","level","topTitle","dangerouslySetInnerHTML","__html","Row","gutter","imageRow","Col","span","SvgIcon","image","Empty","useSubmitKnowledgeConfiguration","save","submitLoading","navigateToDataset","submitKnowledgeConfiguration","_asyncToGenerator","_regeneratorRuntime","mark","_callee","avatar","wrap","_context","prev","next","validateFields","sent","getBase64FromUploadFileList","stop","useFetchKnowledgeConfigurationOnMount","embeddingModelOptions","useSelectLlmOptions","useFetchTenantInfo","useFetchLlmList","LlmModelType","Embedding","fileList","getUploadFileListFromBase64","setFieldsValue","pick","disabled","useSelectKnowledgeDetailsLoading","useHandleChunkMethodChange","_Form$useForm","useForm","_Form$useForm2","useWatch","Option","Select","ConfigurationForm","_useSubmitKnowledgeCo","_useFetchKnowledgeCon","layout","autoComplete","getValueFromEvent","normFile","Upload","listType","maxCount","beforeUpload","showUploadList","showPreviewIcon","showRemoveIcon","border","background","marginTop","placeholder","Radio","options","dependencies","_ref2","buttonWrapper","Space","size","Configuration","_useHandleChunkMethod","configurationWrapper","keyPrefix","Spin","spinning","routeMap","_defineProperty","Testing","KnowledgeDatasetRouteKey","datasetRouteMap","Chunk","File","transformFile2Base64","val","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","transformBase64ToFile","dataUrl","filename","arr","bstr","atob","n","u8arr","Uint8Array","mime","match","mimeType","charCodeAt","e","isArray","uid","thumbUrl","status","file","originFileObj","base64","abrupt","_x","apply","downloadFile","url","target","downloadElement","document","createElement","display","href","rel","download","body","appendChild","click","removeChild","nativeFloor","nativeRandom","baseRandom","lower","upper","module","isIterateeCall","toFinite","freeParseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}