{"version":3,"file":"8725.5446dd55.async.js","mappings":"2QAAYA,EAAiB,SAAjBA,EAAiB,CAAjBA,OAAAA,EAAiB,kBAAjBA,EAAiB,kBAAjBA,EAAiB,8BAAjBA,CAAiB,MAMjBC,EAAa,SAAbA,EAAa,CAAbA,OAAAA,EAAa,YAAbA,EAAa,YAAbA,EAAa,WAAbA,EAAa,SAAbA,EAAa,SAAbA,CAAa,MAQbC,EAAiB,SAAjBA,EAAiB,CAAjBA,OAAAA,EAAiB,sBAAjBA,EAAiB,kBAAjBA,EAAiB,kBAAjBA,CAAiB,MAMhBC,EAAuBC,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,GACjCF,EAAkBG,UAAY,CAC7BC,YAAa,GACbC,MAAO,GACPC,kBAAmB,GACnBC,iBAAkB,GAClBC,WAAY,GACd,CAAC,EACAR,EAAkBS,QAAU,CAC3BL,YAAa,GACbC,MAAO,GACPC,kBAAmB,GACnBC,iBAAkB,GAClBC,WAAY,GACd,CAAC,EACAR,EAAkBU,QAAU,CAC3BN,YAAa,GACbC,MAAO,GACPC,kBAAmB,GACnBC,iBAAkB,GAClBC,WAAY,GACd,CAAC,EAGSG,EAAY,SAAZA,EAAY,CAAZA,OAAAA,EAAY,sBAAZA,EAAY,YAAZA,EAAY,wBAAZA,EAAY,0BAAZA,EAAY,gBAAZA,CAAY,MAQZC,EAAqB,SAArBA,EAAqB,CAArBA,OAAAA,EAAqB,oBAArBA,EAAqB,iBAArBA,CAAqB,K,8PC9CpBC,EAAmB,UAAM,CACpC,IAAAC,KAA8BC,EAAAA,UAAS,EAAK,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBI,EAAY,UAAM,CACtBD,EAAW,EAAI,CACjB,EACME,EAAY,UAAM,CACtBF,EAAW,EAAK,CAClB,EAEMG,EAAgB,UAAM,CAC1BH,EAAW,CAACD,CAAO,CACrB,EAEA,MAAO,CAAEA,QAAAA,EAASE,UAAAA,EAAWC,UAAAA,EAAWC,cAAAA,CAAc,CACxD,EAEaC,EAAuB,SAClCC,EACAC,EACG,CACH,IAAMC,EAAMC,OAA6B,EACrCC,EAA6C,UAAM,CAAC,EACnDC,QAAQJ,EAAMC,EAAII,OAAO,IAC5BF,EAAWJ,EAAO,EAClBE,EAAII,QAAUL,GAEhBM,UAAU,UAAM,CACd,OAAO,UAAM,CACPH,GACFA,EAAS,CAEb,CACF,EAAG,CAAC,CAAC,CACP,EAUO,SAASI,EACdC,EAEA,KADAC,EAAmCC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,OAAAF,UAAA,GAAG,CAAC,EAEjCG,EAAkBX,OAAgD,EACxEY,EAA8BxB,SAAS,EAAK,EAACyB,EAAAvB,eAAAsB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAA0B5B,SAAgB,EAAC6B,EAAA3B,eAAA0B,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdG,EAAyBb,EAAzBa,YAAaC,EAAYd,EAAZc,QACrBjB,iBAAU,UAAM,CACdW,EAAW,EAAI,EACf,IAAMO,EAAU,eAAAC,EAAAC,kBAAAC,oBAAA,EAAAC,KAAG,SAAAC,GAAA,QAAAF,oBAAA,EAAAG,KAAA,SAAAC,EAAA,eAAAA,EAAAC,KAAAD,EAAAE,KAAA,QAAAF,OAAAA,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkB,SAAOzB,CAAI,EAAC,OAA7CK,EAAgBR,QAAO0B,EAAAG,KAAwBC,eAC/Cb,GAAW,MAAXA,EAAcd,EAAMK,EAAgBR,OAAO,EAAE0B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE7CR,GAAO,MAAPA,EAAOQ,EAAAK,EAAM,EACbf,EAAQU,EAAAK,EAAI,EAAE,QAAAL,OAAAA,EAAAC,KAAA,GAEdf,EAAW,EAAK,EAAEc,EAAAM,OAAA,6BAAAN,EAAAO,KAAA,IAAAT,EAAA,oBAErB,oBAVe,QAAAJ,EAAAc,MAAA,KAAA7B,SAAA,MAWhBc,EAAW,CACb,EAAG,CAAChB,EAAMc,EAAaC,CAAO,CAAC,EAExB,CAAEH,MAAAA,EAAOJ,QAAAA,EAASwB,QAAS3B,EAAgBR,OAAQ,CAC5D,CAOO,IAAMoC,EAAuB,UAAM,CACxC,IAAAC,EAAkBC,EAAAA,EAAIC,OAAO,EAArBC,EAAKH,EAALG,MACRC,KAAcC,EAAAA,IAAe,EAArBC,EAACF,EAADE,EAEFC,KAAoBC,EAAAA,aACxB,SAAAC,EAAiD,KAA9CC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SACP,OAAO,IAAIC,QAAQ,SAACC,EAASC,EAAW,CACtCX,EAAMY,QAAQ,CACZC,MAAOV,EAAE,yBAAyB,EAClCW,QAAMC,EAAAA,KAACC,EAAAA,EAAuB,EAAE,EAEhCC,OAAQd,EAAE,WAAW,EACrBe,OAAQ,SACRC,WAAYhB,EAAE,eAAe,EACvBI,KAAI,UAAG,QAAA1B,EAAAA,EAAAC,EAAAA,EAAA,EAAAC,KAAA,SAAAqC,GAAA,KAAAC,EAAA,OAAAvC,EAAAA,EAAA,EAAAG,KAAA,SAAAqC,EAAA,eAAAA,EAAAnC,KAAAmC,EAAAlC,KAAA,QAAAkC,OAAAA,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAESmB,GAAI,YAAJA,EAAO,EAAC,OAApBc,EAAGC,EAAAjC,KACTqB,EAAQW,CAAG,EACXE,QAAQC,KAAKH,CAAG,EAAEC,EAAAlC,KAAA,gBAAAkC,EAAAnC,KAAA,EAAAmC,EAAA/B,GAAA+B,EAAA,SAElBX,EAAMW,EAAA/B,EAAM,EAAE,yBAAA+B,EAAA7B,KAAA,IAAA2B,EAAA,kBAElB,EACAZ,SAAQ,UAAG,CACTA,GAAQ,MAARA,EAAW,CACb,CACF,CAAC,CACH,CAAC,CACH,EACA,CAACL,EAAGH,CAAK,CACX,EAEA,OAAOI,CACT,EAEaqB,EAAe,SAACC,EAAsB,CACjD,SAAOxB,EAAAA,IAAe,cAAe,CAAEwB,UAAAA,CAAU,CAAC,CACpD,EAEaC,EAAuB,UAAM,CACxC,OAAOzB,eAAe,cAAe,CAAEwB,UAAW,QAAS,CAAC,CAC9D,C,saCjHaE,EAAoB,SAACC,EAAwB,CACxD,IAAMC,KAAiBzB,EAAAA,aACrB,SAAC0B,EAAgB,CACf,MAAO,GAAPC,OAAUC,EAAAA,EAAQ,kBAAAD,OAAiBH,GAAcE,CAAE,CACrD,EACA,CAACF,CAAU,CACb,EAEA,OAAOC,CACT,EAEaI,EAAwB,SAACC,EAA0B,CAC9D,IAAA3F,KAAwBC,EAAAA,UAAS,CAAE2F,MAAO,IAAKC,OAAQ,IAAK,CAAC,EAAC3F,EAAAC,EAAAA,EAAAH,EAAA,GAAvD8F,EAAI5F,EAAA,GAAE6F,EAAO7F,EAAA,GAEd8F,KAA2BC,EAAAA,SAAQ,UAAM,CAC7C,SAAOC,EAAAA,IAAqBP,EAAeG,CAAI,CACjD,EAAG,CAACH,EAAeG,CAAI,CAAC,EAElBK,EAAoB,SAACP,EAAeC,EAAmB,CAC3DE,EAAQ,SAACK,EAAQ,CACf,OAAIA,EAAIP,SAAWA,GAAUO,EAAIR,QAAUA,EAClC,CAAEC,OAAAA,EAAQD,MAAAA,CAAM,EAElBQ,CACT,CAAC,CACH,EAEA,MAAO,CAAEJ,WAAAA,EAAYG,kBAAAA,CAAkB,CACzC,EAEaE,EAAuB,UAAM,CACxC,IAAAC,KAAwBC,EAAAA,IAA4B,EAA5CC,EAAWF,EAAXE,YAEFC,KAAWC,EAAAA,aAAY,EAEvBC,KAAc9C,EAAAA,aAAY,UAAM,CACpC,OAAO4C,EAAc,CACnBG,KAAM,oBACNC,QAAS,CACPC,MAAON,CACT,CACF,CAAC,CACH,EAAG,CAACC,EAAUD,CAAW,CAAC,EAE1B,OAAOG,CACT,EAEaI,EAAuB,UAAM,CACxC,IAAMN,KAAWC,EAAAA,aAAY,EAC7BM,KAAwBT,EAAAA,IAA4B,EAA5CC,EAAWQ,EAAXR,YAEFS,KAAoBpD,EAAAA,aACxB,SAACqD,EAAiB7B,EAAuB,CACvCoB,EAAS,CACPG,KAAM,+BACNC,QAAS,CACPM,OAAQ9B,EACR6B,OAAQE,OAAOF,CAAM,EACrBJ,MAAON,CACT,CACF,CAAC,CACH,EACA,CAACC,EAAUD,CAAW,CACxB,EAEA,OAAOS,CACT,EAEaI,EAAwB,UAAM,CACzC,IAAMC,KAAyBC,EAAAA,aAC7B,SAACC,EAAY,CAAF,OAAKA,EAAMC,QAAQC,IAAI,CACpC,EACA,OAAOJ,CACT,EAEaK,EAAsB,UAAM,CACvC,IAAMlB,KAAWC,EAAAA,aAAY,EAC7BkB,KAAwBrB,EAAAA,IAA4B,EAA5CC,EAAWoB,EAAXpB,YAEFqB,KAAWhE,EAAAA,aACf,SAACwB,EAAoBlE,EAAiB,CACpC,OAAOsF,EAAc,CACnBG,KAAM,0BACNC,QAAS,CACPM,OAAQ9B,EACRlE,KAAMA,EACN2F,MAAON,CACT,CACF,CAAC,CACH,EACA,CAACC,EAAUD,CAAW,CACxB,EAEA,OAAOqB,CACT,EAEaC,EAAoB,UAAM,CACrC,IAAMrB,KAAWC,EAAAA,aAAY,EAC7BqB,KAAwBxB,EAAAA,IAA4B,EAA5CC,EAAWuB,EAAXvB,YAEFwB,KAAiBnE,EAAAA,aACrB,SAAC1C,EAAiB,CAChB,GAAI,CACF,OAAOsF,EAAc,CACnBG,KAAM,0BACNC,QAAS,CACP1F,KAAAA,EACA2F,MAAON,CACT,CACF,CAAC,CACH,OAASyB,EAAP,CACAlD,QAAQmD,IAAI,UAAWD,CAAS,CAClC,CACF,EACA,CAACxB,EAAUD,CAAW,CACxB,EAEA,OAAOwB,CACT,EAEaG,EAAuB,UAAM,CACxC,IAAM1B,KAAWC,EAAAA,aAAY,EAC7B0B,KAAwB7B,EAAAA,IAA4B,EAA5CC,EAAW4B,EAAX5B,YAEF6B,KAAoBxE,EAAAA,aACxB,SACEyE,EACAjD,EACAkD,EACG,CACH,GAAI,CACF,OAAO9B,EAAc,CACnBG,KAAM,iCACNC,QAAS,CACP2B,UAAWF,EACXnB,OAAQ9B,EACRyB,MAAON,EACPiC,cAAeF,CACjB,CACF,CAAC,CACH,OAASN,EAAP,CACAlD,QAAQmD,IAAI,UAAWD,CAAS,CAClC,CACF,EACA,CAACxB,EAAUD,CAAW,CACxB,EAEA,OAAO6B,CACT,EAEaK,EAAoB,UAAM,CACrC,IAAMjC,KAAWC,EAAAA,aAAY,EAC7BiC,KAAwBpC,EAAAA,IAA4B,EAA5CC,EAAWmC,EAAXnC,YAEFoC,KAAiB/E,EAAAA,aACrB,SAACgF,EAA0B,CACzB,GAAI,CACF,OAAOpC,EAAc,CACnBG,KAAM,sBACNC,QAAS,CACPM,OAAQ0B,EACR/B,MAAON,CACT,CACF,CAAC,CACH,OAASyB,EAAP,CACAlD,QAAQmD,IAAI,UAAWD,CAAS,CAClC,CACF,EACA,CAACxB,EAAUD,CAAW,CACxB,EAEA,OAAOoC,CACT,EAEaE,EAAoB,UAAM,CACrC,IAAMrC,KAAWC,EAAAA,aAAY,EAC7BqC,KAAwBxC,EAAAA,IAA4B,EAA5CC,EAAWuC,EAAXvC,YAEFwC,KAAiBnF,EAAAA,aACrB,SAACoF,EAA2B,CAC1B,GAAI,CACF,OAAOxC,EAAc,CACnBG,KAAM,0BACNC,QAAS,CACPoC,SAAAA,EACAnC,MAAON,CACT,CACF,CAAC,CACH,OAASyB,EAAP,CACAlD,QAAQmD,IAAI,UAAWD,CAAS,CAClC,CACF,EACA,CAACxB,EAAUD,CAAW,CACxB,EAEA,OAAOwC,CACT,EAEaE,EAAiB,UAAM,CAClC,IAAMzC,KAAWC,EAAAA,aAAY,EAEvByC,KAAmBtF,EAAAA,aACvB,SAACgD,EAAiB,CAChB,GAAI,CACF,OAAOJ,EAAc,CACnBG,KAAM,uBACNC,QAAAA,CACF,CAAC,CACH,OAASoB,EAAP,CACAlD,QAAQmD,IAAI,UAAWD,CAAS,CAClC,CACF,EACA,CAACxB,CAAQ,CACX,EAEA,OAAO0C,CACT,EAEaC,EAA8B,UAAM,CAC/C,IAAMzH,KAAU0H,EAAAA,GAA8B,UAAW,CAAC,cAAc,CAAC,EACzE,OAAO1H,CACT,C,obCrNa2H,EAA0B,SAACjE,EAAuB,CAC7D,IAAMgD,KAAoBF,EAAAA,IAAqB,EAE/CoB,KAIIxJ,EAAAA,IAAiB,EAHVyJ,EAAmBD,EAA5BnJ,QACWqJ,EAAqBF,EAAhChJ,UACWmJ,EAAqBH,EAAhCjJ,UAEIqB,KAAU0H,EAAAA,GAA8B,UAAW,CACvD,wBAAwB,CACzB,EAEKM,KAAmB9F,EAAAA,aAAW,eAAAzB,EAAAC,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAClC,SAAAC,EAAO8F,EAAkBC,EAA8C,CAAF,IAAA1D,EAAA,OAAAvC,EAAAA,EAAA,EAAAG,KAAA,SAAAC,EAAE,CAAF,cAAAA,EAAAC,KAAAD,EAAAE,KAAE,CAAF,OAAAF,OAAAA,EAAAE,KAAA,EACjDyF,EAAkBC,EAAUjD,EAAYkD,CAAY,EAAC,OAAjE1D,EAAGnC,EAAAG,KACLgC,IAAQ,GACV4E,EAAsB,EACvB,wBAAA/G,EAAAO,KAAA,IAAAT,CAAA,EACF,mBAAAoH,EAAAC,EAAA,QAAAzH,EAAAc,MAAA,KAAA7B,SAAA,MACD,CAACoI,EAAuBpB,EAAmBhD,CAAU,CACvD,EAEA,MAAO,CACLyE,oBAAqBnI,EACrBgI,iBAAAA,EACAH,oBAAAA,EACAC,sBAAAA,EACAC,sBAAAA,CACF,CACF,EAEaK,EAAuB,UAA0B,CAC5D,IAAA/J,KAA0CC,EAAAA,UAAY,CAAC,CAAM,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAAvDgK,EAAa9J,EAAA,GAAE+J,EAAgB/J,EAAA,GAEhCgK,EAAY,SAACC,EAAc,CAC/BF,EAAiBE,CAAM,CACzB,EAEA,MAAO,CAAEH,cAAAA,EAAeE,UAAAA,CAAU,CACpC,EAEaE,EAAoB,UAAM,CACrC,IAAA3G,KAAiBC,EAAAA,IAAe,EAAxB2G,EAAI5G,EAAJ4G,KACFC,KAAcC,EAAAA,IAAe,EAE7BC,EAAiB,SAACC,EAAgB,CACtCJ,EAAKG,eACHE,EAAAA,GAAuBD,CAAG,CAC5B,EACAH,EAAY,CAAEK,SAAUF,CAAI,CAAC,CAC/B,EAEA,OAAOD,CACT,EAEaI,EAAmB,SAC9BC,EACAC,EACAC,EACAC,EACG,CACH,IAAAC,KAAchG,EAAAA,IAAa,QAAQ,EAA3BtB,EAACsH,EAADtH,EAEFuH,KAA8BjF,EAAAA,SAAQ,UAAM,CAChD,MAAO,CACLkF,gBAAiB,GACjBN,MAAAA,EACAO,gBAAiB,GACjBpK,QAAS8J,EACTC,SAAUA,EACVM,gBAAiB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAG,EACvCC,SAAUN,EACVO,UAAW,SAACV,EAAO,CAAF,SAAArF,OAAQ7B,EAAE,OAAO,EAAC,KAAA6B,OAAIqF,CAAK,EAC9C,CACF,EAAG,CAAClH,EAAGqH,EAAcF,EAAMC,EAAUF,CAAK,CAAC,EAE3C,MAAO,CACLK,WAAAA,CACF,CACF,EAEaM,EAAmB,SAACC,EAAsB,CACrD,IAAMhF,KAAWC,EAAAA,aAAY,EAEvBgF,KAAgB7H,EAAAA,aACpB,UAAuC,KAAtC8H,EAAUtK,UAAAC,OAAA,GAAAD,UAAA,KAAAE,OAAAF,UAAA,GAAG,EAAG0J,EAAiB1J,UAAAC,OAAA,EAAAD,UAAA,GAAAE,OAC1B2J,EAAyB,CAC7BlK,QAAS2K,CACX,EACIZ,IACFG,EAAWH,SAAWA,GAExBtE,EAAS,CACPG,KAAM,GAAFpB,OAAKiG,EAAS,kBAClB5E,QAASqE,CACX,CAAC,CACH,EACA,CAACzE,EAAUgF,CAAS,CACtB,EAEA,OAAOC,CACT,EAMaE,EAAkB,UAAM,CACnC,IAAAnK,KAA8BxB,EAAAA,UAAkB,CAAC,CAAY,EAACyB,EAAAvB,EAAAA,EAAAsB,EAAA,GAAvDoK,EAAOnK,EAAA,GAAEoK,EAAUpK,EAAA,GACpBqK,KAAelI,EAAAA,aAAWxB,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAAC,SAAAqC,GAAA,KAAAC,EAAA,OAAAvC,EAAAA,EAAA,EAAAG,KAAA,SAAAqC,EAAA,eAAAA,EAAAnC,KAAAmC,EAAAlC,KAAA,QAAAkC,OAAAA,EAAAlC,KAAA,EACboJ,EAAAA,EAAMC,IAAI,YAAY,EAAC,OAAnCpH,EAAGC,EAAAjC,KAETiJ,EAAWjH,EAAI6C,IAAI,EAAE,wBAAA5C,EAAA7B,KAAA,IAAA2B,CAAA,EACtB,GAAE,CAAC,CAAC,EAEL3D,SAAAA,EAAAA,WAAU,UAAM,CACd8K,EAAa,CACf,EAAG,CAACA,CAAY,CAAC,EAEVF,CACT,EAEaK,EAAwB,UAEhC,KADHC,EAAW9K,UAAAC,OAAA,GAAAD,UAAA,KAAAE,OAAAF,UAAA,GAAG+K,EAAAA,EAAIC,qBAElBxK,KAA4B5B,EAAAA,UAAkB,CAAC,CAAY,EAAC6B,EAAA3B,EAAAA,EAAA0B,EAAA,GAArDyK,EAAMxK,EAAA,GAAEyK,EAASzK,EAAA,GACxB0K,KAAwBvM,EAAAA,UAAS,EAAI,EAACwM,EAAAtM,EAAAA,EAAAqM,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,KAAO/I,EAAAA,aAAW,eAAAgJ,EAAAxK,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KACtB,SAAAuK,EAAOC,EAAW,CAAF,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjL,EAAAA,EAAA,EAAAG,KAAA,SAAA+K,EAAE,CAAF,cAAAA,EAAA7K,KAAA6K,EAAA5K,KAAE,CAAF,OAAA4K,OAAAA,EAAA7K,KAAA,EAEZgK,EAAQ,EAAK,EAAEa,EAAA5K,KAAA,EACQ6K,MAAMtB,EAAK,CAChCuB,OAAQ,OACRC,QAAOvO,EAAAA,EAAAA,EAAAA,EAAA,GACJwO,EAAAA,MAAgBC,EAAAA,GAAiB,CAAC,EACnC,eAAgB,kBAAkB,EAEpCd,KAAMe,KAAKC,UAAUhB,CAAI,CAC3B,CAAC,EAAC,OAPIE,EAAQO,EAAA3K,KASRqK,EAASD,GAAQ,OAAAD,EAARC,EAAUF,QAAI,MAAAC,IAAA,cAAdA,EACXgB,YAAY,IAAIC,iBAAmB,EACpCD,YAAY,IAAIE,EAAAA,CAAyB,EACzCC,UAAU,EAAC,OAEHX,OAAAA,EAAA5K,KAAA,EACOsK,GAAM,YAANA,EAAQkB,KAAK,EAAC,OAAvB,GAADjB,EAACK,EAAA3K,KAAA,CACHsK,EAAG,CAAFK,EAAA5K,KAAA,SACK8J,EAAgBS,EAAhBT,KAAMW,EAAUF,EAAVE,MACd,GAAI,CACIC,EAAMQ,KAAKO,OAAMhB,GAAK,YAALA,EAAO3F,OAAQ,EAAE,EAClC6F,EAAID,GAAG,YAAHA,EAAK5F,KACX,OAAO6F,GAAM,YACfxI,QAAQC,KAAK,QAASuI,CAAC,EACvBhB,EAAUgB,CAAC,EAEf,OAASe,GAAP,CACAvJ,QAAQwJ,KAAKD,EAAC,CAChB,CAAC,IACG5B,EAAM,CAAFc,EAAA5K,KAAA,SACNmC,eAAQC,KAAK,MAAM,EAAEwI,EAAAgB,OAAA,oBAAAhB,EAAA5K,KAAA,gBAK3BmC,eAAQC,KAAK,OAAO,EACpB2H,EAAQ,EAAI,EAAEa,EAAAgB,OAAA,SACPvB,CAAQ,UAAAO,EAAA7K,KAAA,GAAA6K,EAAAzK,GAAAyK,EAAA,SAEfb,EAAQ,EAAI,EACZ5H,QAAQwJ,KAAIf,EAAAzK,EAAE,EAAE,yBAAAyK,EAAAvK,KAAA,IAAA6J,EAAA,eAEnB,mBAAA2B,EAAA,QAAA5B,EAAA3J,MAAA,KAAA7B,SAAA,MACD,CAAC8K,CAAG,CACN,EAEA,MAAO,CAAES,KAAAA,EAAMN,OAAAA,EAAQI,KAAAA,CAAK,CAC9B,C,6NC9LYgC,EAAY,SAAZA,EAAY,CAAZA,OAAAA,EAAY,WAAZA,EAAY,UAAZA,CAAY,MAKXC,EAAuB,SAACC,EAAwB,CAC3D,IAAAC,KAAqBC,EAAAA,aAAY,EAAzBC,EAAQF,EAARE,SAEFC,EAAYD,EAASE,MAAM,GAAG,EACpC,OAAOD,EAAUJ,CAAK,GAAK,EAC7B,EAEaM,EAAoB,UAAM,CACrC,OAAOP,EAAqBD,EAAaS,MAAM,CACjD,EAEaC,EAAmB,UAAM,CACpC,OAAOT,EAAqBD,EAAaW,KAAK,CAChD,EAEa9I,EAA8B,UAAM,CAC/C,IAAA+I,KAAiCC,EAAAA,iBAAgB,EAACC,EAAArP,EAAAA,EAAAmP,EAAA,GAA3CG,EAAsBD,EAAA,GAE7B,MAAO,CACLnK,WACEoK,EAAuBxD,IAAInM,EAAAA,GAAsB4P,UAAU,GAAK,GAClElJ,YACEiJ,EAAuBxD,IAAInM,EAAAA,GAAsB6P,WAAW,GAAK,EACrE,CACF,EAEaC,EAA2B,UAAM,CAC5C,IAAMC,KAAWC,EAAAA,aAAY,EAC7B,SAAOjM,EAAAA,aACL,SAACkM,EAAiB,CAChBF,EAASE,EAAM,CAAEvI,MAAO,CAAEwI,KAAMD,CAAK,CAAE,CAAC,CAC1C,EACA,CAACF,CAAQ,CACX,CACF,EAEaI,EAAuB,UAAM,CACxC,IAAMJ,KAAWC,EAAAA,aAAY,EAC7BxJ,EAAwBC,EAA4B,EAA5CC,EAAWF,EAAXE,YAER,SAAO3C,EAAAA,aAAY,UAAM,CACvBgM,EAAS,cAADrK,OAAexG,EAAAA,GAAkBkR,QAAO,QAAA1K,OAAOgB,CAAW,CAAE,CACtE,EAAG,CAACA,EAAaqJ,CAAQ,CAAC,CAC5B,C,qECvDO,IAAMM,EAAgC,SAC3C1E,EACA2E,EACAC,EACG,CACH,OAAOA,EAAYC,KACjB,SAACC,EAAY,CAAF,OAAKH,EAAQ,GAAD5K,OAAIiG,EAAS,KAAAjG,OAAI+K,CAAU,EAAG,CACvD,CACF,EAEaC,EAAQ,SAACC,EAAY,CAAF,OAC9B,IAAIxM,QAAQ,SAACC,EAAY,CACvBwM,WAAWxM,EAASuM,CAAE,CACxB,CAAC,CAAC,E,UCTSpH,EAAgC,SAC3CoC,EACA4E,EACG,CACH,IAAMD,KAAU7I,EAAAA,aAAY,SAACC,EAAY,CAAF,OAAKA,EAAM7F,QAAQyO,OAAO,GACjE,OAAOD,EAA8B1E,EAAW2E,EAASC,CAAW,CACtE,C,gXCHaM,EAAmB,UAAM,CACpC,IAAMlK,KAAWC,EAAAA,aAAY,EACvBkK,KAAgB/M,EAAAA,aAAY,UAAM,CACtC4C,EAAS,CAAEG,KAAM,0BAA2B,CAAC,CAC/C,EAAG,CAACH,CAAQ,CAAC,KAEbxF,EAAAA,WAAU,UAAM,CACd2P,EAAc,CAChB,EAAG,CAACA,CAAa,CAAC,CACpB,EAEaC,EAAoB,UAAM,CACrC,IAAMC,KAAsBvJ,EAAAA,aAC1B,SAACC,EAAY,CAAF,OAAKA,EAAMuJ,aAAaD,QAAQ,CAC7C,EAEA,OAAOA,CACT,EAEaE,EAAsB,UAAM,CACvC,IAAMC,KAA0B1J,EAAAA,aAC9B,SAACC,EAAY,CAAF,OAAKA,EAAMuJ,aAAaG,SAAS,CAC9C,EAEA,OAAOD,CACT,EAEaE,EAAqB,UAAuC,KAAtCC,EAA0B/P,UAAAC,OAAA,GAAAD,UAAA,KAAAE,OAAAF,UAAA,GAAG,GACxDoF,KAAWC,EAAAA,aAAY,EAEvB2K,KAAkBxN,EAAAA,aAAY,UAAM,CACxC4C,EAAS,CACPG,KAAM,4BACR,CAAC,CACH,EAAG,CAACH,CAAQ,CAAC,EAEbxF,SAAAA,EAAAA,WAAU,UAAM,CACVmQ,GACFC,EAAgB,CAEpB,EAAG,CAACA,EAAiBD,CAAiB,CAAC,EAEhCC,CACT,EAEaC,EAAsB,UAG7B,CACJ,IAAML,EAA0BD,EAAoB,EAE9CO,KAAatL,EAAAA,SAAQ,UAAM,KAAAuL,EACzBC,GAA0BD,EAAGP,GAAU,YAAVA,EAAYS,WAAWzC,MAAM,GAAG,KAAC,MAAAuC,IAAA,OAAAA,EAAI,CAAC,EACzE,OAAOC,EAAYE,IAAI,SAACxE,EAAM,CAC5B,IAAMyE,EAAMzE,EAAE8B,MAAM,GAAG,EACvB,MAAO,CAAE5B,MAAOuE,EAAI,CAAC,EAAGC,MAAOD,EAAI,CAAC,CAAE,CACxC,CAAC,CACH,EAAG,CAACX,CAAU,CAAC,EAEf,OAAOM,CACT,EAEaO,EAAY,UAAM,CAC7B,IAAMrL,KAAWC,EAAAA,aAAY,EAEvBqL,KAASlO,EAAAA,aAAWxB,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAAC,SAAAC,GAAA,KAAAwP,EAAA,OAAA1P,EAAAA,EAAA,EAAAG,KAAA,SAAAC,EAAA,eAAAA,EAAAC,KAAAD,EAAAE,KAAA,QAAAF,OAAAA,EAAAE,KAAA,EACH6D,EAAc,CAAEG,KAAM,mBAAoB,CAAC,EAAC,OAA5DoL,EAAOtP,EAAAG,KACTmP,IAAY,IACdC,EAAAA,EAAkBC,UAAU,EAC5BC,EAAAA,QAAQC,KAAK,QAAQ,GACtB,wBAAA1P,EAAAO,KAAA,IAAAT,CAAA,EACF,GAAE,CAACiE,CAAQ,CAAC,EAEb,OAAOsL,CACT,EAEaxH,EAAiB,UAAM,CAClC,IAAM9D,KAAWC,EAAAA,aAAY,EAEvB4D,KAAczG,EAAAA,aAClB,SAACiN,EAAoE,CACnE,OAAOrK,EAAc,CAAEG,KAAM,uBAAwBC,QAASiK,CAAS,CAAC,CAC1E,EACA,CAACrK,CAAQ,CACX,EAEA,OAAO6D,CACT,EAEa+H,EAAwB,UAAM,CACzC,IAAArS,KAA8BC,EAAAA,UAAS,EAAE,EAACC,EAAAC,EAAAA,EAAAH,EAAA,GAAnCsS,EAAOpS,EAAA,GAAEqS,EAAUrS,EAAA,GAC1BuB,KAA8BxB,EAAAA,UAAS,EAAK,EAACyB,EAAAvB,EAAAA,EAAAsB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpB8Q,KAAqB3O,EAAAA,aAAWxB,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAAC,SAAAqC,GAAA,KAAA6N,EAAA/K,EAAA,OAAApF,EAAAA,EAAA,EAAAG,KAAA,SAAAqC,EAAA,eAAAA,EAAAnC,KAAAmC,EAAAlC,KAAA,QACrChB,OAAAA,EAAW,EAAI,EAAEkD,EAAAlC,KAAA,EACM8P,EAAAA,EAAYC,iBAAiB,EAAC,OAAAF,EAAA3N,EAAAjC,KAA7C6E,EAAI+K,EAAJ/K,KACJA,EAAKsK,UAAY,IACnBO,EAAW7K,EAAKA,IAAI,EACpB9F,EAAW,EAAK,GACjB,wBAAAkD,EAAA7B,KAAA,IAAA2B,CAAA,EACF,GAAE,CAAC,CAAC,EAEL,MAAO,CAAE4N,mBAAAA,EAAoBF,QAAAA,EAAS3Q,QAAAA,CAAQ,CAChD,EAEaiR,EAAuB,UAAM,CACxC,IAAA/Q,KAAwC5B,EAAAA,UACtC,CAAC,CACH,EAAC6B,EAAA3B,EAAAA,EAAA0B,EAAA,GAFMgR,EAAY/Q,EAAA,GAAEgR,EAAehR,EAAA,GAGpC0K,KAA8BvM,EAAAA,UAAS,EAAK,EAACwM,EAAAtM,EAAAA,EAAAqM,EAAA,GAAtC7K,EAAO8K,EAAA,GAAE7K,EAAU6K,EAAA,GAEpBsG,KAAoBlP,EAAAA,aAAWxB,EAAAA,EAAAC,EAAAA,EAAC,EAADC,KAAC,SAAAuK,GAAA,KAAAkG,EAAAtL,EAAA,OAAApF,EAAAA,EAAA,EAAAG,KAAA,SAAA+K,EAAA,eAAAA,EAAA7K,KAAA6K,EAAA5K,KAAA,QACpChB,OAAAA,EAAW,EAAI,EAAE4L,EAAA5K,KAAA,EACM8P,EAAAA,EAAYO,gBAAgB,EAAC,OAAAD,EAAAxF,EAAA3K,KAA5C6E,EAAIsL,EAAJtL,KACJA,EAAKsK,UAAY,IACnBc,EAAgBpL,EAAKA,IAAI,EACzB9F,EAAW,EAAK,GACjB,wBAAA4L,EAAAvK,KAAA,IAAA6J,CAAA,EACF,GAAE,CAAC,CAAC,EAEL,MAAO,CACL+F,aAAAA,EACAE,kBAAAA,EACApR,QAAAA,CACF,CACF,C,qLChIauE,EAAuB,SAClCP,EACAG,EACG,KAAAoN,EACH,OAAOC,MAAMC,QAAQzN,GAAa,YAAbA,EAAe0N,SAAS,GAC3C1N,EAAc0N,UAAUC,MAAM,SAACnG,EAAG,CAAF,OAAKgG,MAAMC,QAAQjG,CAAC,CAAC,GACnDxH,GAAa,OAAAuN,EAAbvN,EAAe0N,aAAS,MAAAH,IAAA,cAAxBA,EAA0BvB,IAAI,SAACxE,EAAM,CACnC,IAAMoG,EAAe,CACnB3N,MAAOE,EAAKF,MACZC,OAAQC,EAAKD,OACb2N,GAAIrG,EAAE,CAAC,EACPsG,GAAItG,EAAE,CAAC,EACPuG,GAAIvG,EAAE,CAAC,EACPwG,GAAIxG,EAAE,CAAC,CACT,EACA,MAAO,CACL5H,MAAIqO,EAAAA,GAAK,EACTC,QAAS,CACPC,KAAM,GACNC,MAAO,EACT,EACAC,QAAS,CAAEF,KAAMnO,EAAcsO,mBAAoB,EACnDC,SAAU,CACRX,aAAcA,EACdY,MAAO,CAACZ,CAAY,EACpB5H,WAAYwB,EAAE,CAAC,CACjB,CACF,CACF,CAAC,EACD,CAAC,CACP,EAEaiH,EAAmB,SAACC,EAAkB,CAAF,OAAKA,EAAKnN,SAAW,MAAM,EAE/DoN,EAAe,SAACnT,EAAc,CAAF,IAAAoT,EAAA,OAAAA,EACvCpT,GAAI,YAAJA,EAAMqT,MAAMrT,EAAKsT,YAAY,GAAG,EAAI,CAAC,EAAEC,YAAY,KAAC,MAAAH,IAAA,OAAAA,EAAI,EAAE,EAE/CI,EAAQ,SAACxT,EAAiB,CACrC,OAAOmT,EAAanT,CAAI,IAAM,KAChC,EAEayT,EAA2B,SAACC,EAAoB,CAC3D,OAAOA,EAAQ5F,MAAM;AAAA,CAAI,EAAE3N,MAC7B,C,oBC/CA,SAASwT,EAAyBC,EAAK,CAGtC,OAAO,QAAQ,QAAQ,EAAE,KAAK,UAAW,CACxC,IAAIzG,EAAI,IAAI,MAAM,uBAAyByG,EAAM,GAAG,EACpD,MAAAzG,EAAE,KAAO,mBACHA,CACP,CAAC,CACF,CACAwG,EAAyB,KAAO,UAAW,CAAE,MAAO,CAAC,CAAG,EACxDA,EAAyB,QAAUA,EACnCA,EAAyB,GAAK,MAC9BE,EAAO,QAAUF,C","sources":["webpack:///./src/constants/knowledge.ts","webpack:///./src/hooks/commonHooks.tsx","webpack:///./src/hooks/documentHooks.ts","webpack:///./src/hooks/logicHooks.ts","webpack:///./src/hooks/routeHook.ts","webpack:///./src/utils/storeUtil.ts","webpack:///./src/hooks/storeHooks.ts","webpack:///./src/hooks/userSettingHook.ts","webpack:///./src/utils/documentUtils.ts","webpack:///./src/hooks/ lazy namespace object"],"sourcesContent":["export enum KnowledgeRouteKey {\n  Dataset = 'dataset',\n  Testing = 'testing',\n  Configuration = 'configuration',\n}\n\nexport enum RunningStatus {\n  UNSTART = '0', // need to run\n  RUNNING = '1', // need to cancel\n  CANCEL = '2', // need to refresh\n  DONE = '3', // need to refresh\n  FAIL = '4', // need to refresh\n}\n\nexport enum ModelVariableType {\n  Improvise = 'Improvise',\n  Precise = 'Precise',\n  Balance = 'Balance',\n}\n\nexport const settledModelVariableMap = {\n  [ModelVariableType.Improvise]: {\n    temperature: 0.9,\n    top_p: 0.9,\n    frequency_penalty: 0.2,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Precise]: {\n    temperature: 0.1,\n    top_p: 0.3,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Balance]: {\n    temperature: 0.5,\n    top_p: 0.5,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n};\n\nexport enum LlmModelType {\n  Embedding = 'embedding',\n  Chat = 'chat',\n  Image2text = 'image2text',\n  Speech2text = 'speech2text',\n  Rerank = 'rerank',\n}\n\nexport enum KnowledgeSearchParams {\n  DocumentId = 'doc_id',\n  KnowledgeId = 'id',\n}\n","import { ExclamationCircleFilled } from '@ant-design/icons';\nimport { App } from 'antd';\nimport isEqual from 'lodash/isEqual';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useSetModalState = () => {\n  const [visible, setVisible] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n  const hideModal = () => {\n    setVisible(false);\n  };\n\n  const switchVisible = () => {\n    setVisible(!visible);\n  };\n\n  return { visible, showModal, hideModal, switchVisible };\n};\n\nexport const useDeepCompareEffect = (\n  effect: React.EffectCallback,\n  deps: React.DependencyList,\n) => {\n  const ref = useRef<React.DependencyList>();\n  let callback: ReturnType<React.EffectCallback> = () => {};\n  if (!isEqual(deps, ref.current)) {\n    callback = effect();\n    ref.current = deps;\n  }\n  useEffect(() => {\n    return () => {\n      if (callback) {\n        callback();\n      }\n    };\n  }, []);\n};\n\nexport interface UseDynamicSVGImportOptions {\n  onCompleted?: (\n    name: string,\n    SvgIcon: React.FC<React.SVGProps<SVGSVGElement>> | undefined,\n  ) => void;\n  onError?: (err: Error) => void;\n}\n\nexport function useDynamicSVGImport(\n  name: string,\n  options: UseDynamicSVGImportOptions = {},\n) {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>>>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>();\n\n  const { onCompleted, onError } = options;\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        ImportedIconRef.current = (await import(name)).ReactComponent;\n        onCompleted?.(name, ImportedIconRef.current);\n      } catch (err: any) {\n        onError?.(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name, onCompleted, onError]);\n\n  return { error, loading, SvgIcon: ImportedIconRef.current };\n}\n\ninterface IProps {\n  onOk?: (...args: any[]) => any;\n  onCancel?: (...args: any[]) => any;\n}\n\nexport const useShowDeleteConfirm = () => {\n  const { modal } = App.useApp();\n  const { t } = useTranslation();\n\n  const showDeleteConfirm = useCallback(\n    ({ onOk, onCancel }: IProps): Promise<number> => {\n      return new Promise((resolve, reject) => {\n        modal.confirm({\n          title: t('common.deleteModalTitle'),\n          icon: <ExclamationCircleFilled />,\n          // content: 'Some descriptions',\n          okText: t('common.ok'),\n          okType: 'danger',\n          cancelText: t('common.cancel'),\n          async onOk() {\n            try {\n              const ret = await onOk?.();\n              resolve(ret);\n              console.info(ret);\n            } catch (error) {\n              reject(error);\n            }\n          },\n          onCancel() {\n            onCancel?.();\n          },\n        });\n      });\n    },\n    [t, modal],\n  );\n\n  return showDeleteConfirm;\n};\n\nexport const useTranslate = (keyPrefix: string) => {\n  return useTranslation('translation', { keyPrefix });\n};\n\nexport const useCommonTranslation = () => {\n  return useTranslation('translation', { keyPrefix: 'common' });\n};\n","import { IChunk, IKnowledgeFile } from '@/interfaces/database/knowledge';\nimport { IChangeParserConfigRequestBody } from '@/interfaces/request/document';\nimport { api_host } from '@/utils/api';\nimport { buildChunkHighlights } from '@/utils/documentUtils';\nimport { UploadFile } from 'antd';\nimport { useCallback, useMemo, useState } from 'react';\nimport { IHighlight } from 'react-pdf-highlighter';\nimport { useDispatch, useSelector } from 'umi';\nimport { useGetKnowledgeSearchParams } from './routeHook';\nimport { useOneNamespaceEffectsLoading } from './storeHooks';\n\nexport const useGetDocumentUrl = (documentId?: string) => {\n  const getDocumentUrl = useCallback(\n    (id?: string) => {\n      return `${api_host}/document/get/${documentId || id}`;\n    },\n    [documentId],\n  );\n\n  return getDocumentUrl;\n};\n\nexport const useGetChunkHighlights = (selectedChunk: IChunk) => {\n  const [size, setSize] = useState({ width: 849, height: 1200 });\n\n  const highlights: IHighlight[] = useMemo(() => {\n    return buildChunkHighlights(selectedChunk, size);\n  }, [selectedChunk, size]);\n\n  const setWidthAndHeight = (width: number, height: number) => {\n    setSize((pre) => {\n      if (pre.height !== height || pre.width !== width) {\n        return { height, width };\n      }\n      return pre;\n    });\n  };\n\n  return { highlights, setWidthAndHeight };\n};\n\nexport const useFetchDocumentList = () => {\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const dispatch = useDispatch();\n\n  const fetchKfList = useCallback(() => {\n    return dispatch<any>({\n      type: 'kFModel/getKfList',\n      payload: {\n        kb_id: knowledgeId,\n      },\n    });\n  }, [dispatch, knowledgeId]);\n\n  return fetchKfList;\n};\n\nexport const useSetDocumentStatus = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const setDocumentStatus = useCallback(\n    (status: boolean, documentId: string) => {\n      dispatch({\n        type: 'kFModel/updateDocumentStatus',\n        payload: {\n          doc_id: documentId,\n          status: Number(status),\n          kb_id: knowledgeId,\n        },\n      });\n    },\n    [dispatch, knowledgeId],\n  );\n\n  return setDocumentStatus;\n};\n\nexport const useSelectDocumentList = () => {\n  const list: IKnowledgeFile[] = useSelector(\n    (state: any) => state.kFModel.data,\n  );\n  return list;\n};\n\nexport const useSaveDocumentName = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const saveName = useCallback(\n    (documentId: string, name: string) => {\n      return dispatch<any>({\n        type: 'kFModel/document_rename',\n        payload: {\n          doc_id: documentId,\n          name: name,\n          kb_id: knowledgeId,\n        },\n      });\n    },\n    [dispatch, knowledgeId],\n  );\n\n  return saveName;\n};\n\nexport const useCreateDocument = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const createDocument = useCallback(\n    (name: string) => {\n      try {\n        return dispatch<any>({\n          type: 'kFModel/document_create',\n          payload: {\n            name,\n            kb_id: knowledgeId,\n          },\n        });\n      } catch (errorInfo) {\n        console.log('Failed:', errorInfo);\n      }\n    },\n    [dispatch, knowledgeId],\n  );\n\n  return createDocument;\n};\n\nexport const useSetDocumentParser = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const setDocumentParser = useCallback(\n    (\n      parserId: string,\n      documentId: string,\n      parserConfig: IChangeParserConfigRequestBody,\n    ) => {\n      try {\n        return dispatch<any>({\n          type: 'kFModel/document_change_parser',\n          payload: {\n            parser_id: parserId,\n            doc_id: documentId,\n            kb_id: knowledgeId,\n            parser_config: parserConfig,\n          },\n        });\n      } catch (errorInfo) {\n        console.log('Failed:', errorInfo);\n      }\n    },\n    [dispatch, knowledgeId],\n  );\n\n  return setDocumentParser;\n};\n\nexport const useRemoveDocument = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const removeDocument = useCallback(\n    (documentIds: string[]) => {\n      try {\n        return dispatch<any>({\n          type: 'kFModel/document_rm',\n          payload: {\n            doc_id: documentIds,\n            kb_id: knowledgeId,\n          },\n        });\n      } catch (errorInfo) {\n        console.log('Failed:', errorInfo);\n      }\n    },\n    [dispatch, knowledgeId],\n  );\n\n  return removeDocument;\n};\n\nexport const useUploadDocument = () => {\n  const dispatch = useDispatch();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const uploadDocument = useCallback(\n    (fileList: UploadFile[]) => {\n      try {\n        return dispatch<any>({\n          type: 'kFModel/upload_document',\n          payload: {\n            fileList,\n            kb_id: knowledgeId,\n          },\n        });\n      } catch (errorInfo) {\n        console.log('Failed:', errorInfo);\n      }\n    },\n    [dispatch, knowledgeId],\n  );\n\n  return uploadDocument;\n};\n\nexport const useRunDocument = () => {\n  const dispatch = useDispatch();\n\n  const runDocumentByIds = useCallback(\n    (payload: any) => {\n      try {\n        return dispatch<any>({\n          type: 'kFModel/document_run',\n          payload,\n        });\n      } catch (errorInfo) {\n        console.log('Failed:', errorInfo);\n      }\n    },\n    [dispatch],\n  );\n\n  return runDocumentByIds;\n};\n\nexport const useSelectRunDocumentLoading = () => {\n  const loading = useOneNamespaceEffectsLoading('kFModel', ['document_run']);\n  return loading;\n};\n","import { Authorization } from '@/constants/authorization';\nimport { LanguageTranslationMap } from '@/constants/common';\nimport { Pagination } from '@/interfaces/common';\nimport { IAnswer } from '@/interfaces/database/chat';\nimport { IKnowledgeFile } from '@/interfaces/database/knowledge';\nimport { IChangeParserConfigRequestBody } from '@/interfaces/request/document';\nimport api from '@/utils/api';\nimport { getAuthorization } from '@/utils/authorizationUtil';\nimport { PaginationProps } from 'antd';\nimport axios from 'axios';\nimport { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'umi';\nimport { useSetModalState, useTranslate } from './commonHooks';\nimport { useSetDocumentParser } from './documentHooks';\nimport { useOneNamespaceEffectsLoading } from './storeHooks';\nimport { useSaveSetting } from './userSettingHook';\n\nexport const useChangeDocumentParser = (documentId: string) => {\n  const setDocumentParser = useSetDocumentParser();\n\n  const {\n    visible: changeParserVisible,\n    hideModal: hideChangeParserModal,\n    showModal: showChangeParserModal,\n  } = useSetModalState();\n  const loading = useOneNamespaceEffectsLoading('kFModel', [\n    'document_change_parser',\n  ]);\n\n  const onChangeParserOk = useCallback(\n    async (parserId: string, parserConfig: IChangeParserConfigRequestBody) => {\n      const ret = await setDocumentParser(parserId, documentId, parserConfig);\n      if (ret === 0) {\n        hideChangeParserModal();\n      }\n    },\n    [hideChangeParserModal, setDocumentParser, documentId],\n  );\n\n  return {\n    changeParserLoading: loading,\n    onChangeParserOk,\n    changeParserVisible,\n    hideChangeParserModal,\n    showChangeParserModal,\n  };\n};\n\nexport const useSetSelectedRecord = <T = IKnowledgeFile>() => {\n  const [currentRecord, setCurrentRecord] = useState<T>({} as T);\n\n  const setRecord = (record: T) => {\n    setCurrentRecord(record);\n  };\n\n  return { currentRecord, setRecord };\n};\n\nexport const useChangeLanguage = () => {\n  const { i18n } = useTranslation();\n  const saveSetting = useSaveSetting();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(\n      LanguageTranslationMap[lng as keyof typeof LanguageTranslationMap],\n    );\n    saveSetting({ language: lng });\n  };\n\n  return changeLanguage;\n};\n\nexport const useGetPagination = (\n  total: number,\n  page: number,\n  pageSize: number,\n  onPageChange: PaginationProps['onChange'],\n) => {\n  const { t } = useTranslate('common');\n\n  const pagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total,\n      showSizeChanger: true,\n      current: page,\n      pageSize: pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, page, pageSize, total]);\n\n  return {\n    pagination,\n  };\n};\n\nexport const useSetPagination = (namespace: string) => {\n  const dispatch = useDispatch();\n\n  const setPagination = useCallback(\n    (pageNumber = 1, pageSize?: number) => {\n      const pagination: Pagination = {\n        current: pageNumber,\n      } as Pagination;\n      if (pageSize) {\n        pagination.pageSize = pageSize;\n      }\n      dispatch({\n        type: `${namespace}/setPagination`,\n        payload: pagination,\n      });\n    },\n    [dispatch, namespace],\n  );\n\n  return setPagination;\n};\n\nexport interface AppConf {\n  appName: string;\n}\n\nexport const useFetchAppConf = () => {\n  const [appConf, setAppConf] = useState<AppConf>({} as AppConf);\n  const fetchAppConf = useCallback(async () => {\n    const ret = await axios.get('/conf.json');\n\n    setAppConf(ret.data);\n  }, []);\n\n  useEffect(() => {\n    fetchAppConf();\n  }, [fetchAppConf]);\n\n  return appConf;\n};\n\nexport const useSendMessageWithSse = (\n  url: string = api.completeConversation,\n) => {\n  const [answer, setAnswer] = useState<IAnswer>({} as IAnswer);\n  const [done, setDone] = useState(true);\n\n  const send = useCallback(\n    async (body: any) => {\n      try {\n        setDone(false);\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            [Authorization]: getAuthorization(),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        });\n\n        const reader = response?.body\n          ?.pipeThrough(new TextDecoderStream())\n          .pipeThrough(new EventSourceParserStream())\n          .getReader();\n\n        while (true) {\n          const x = await reader?.read();\n          if (x) {\n            const { done, value } = x;\n            try {\n              const val = JSON.parse(value?.data || '');\n              const d = val?.data;\n              if (typeof d !== 'boolean') {\n                console.info('data:', d);\n                setAnswer(d);\n              }\n            } catch (e) {\n              console.warn(e);\n            }\n            if (done) {\n              console.info('done');\n              break;\n            }\n          }\n        }\n        console.info('done?');\n        setDone(true);\n        return response;\n      } catch (e) {\n        setDone(true);\n        console.warn(e);\n      }\n    },\n    [url],\n  );\n\n  return { send, answer, done };\n};\n","import {\n  KnowledgeRouteKey,\n  KnowledgeSearchParams,\n} from '@/constants/knowledge';\nimport { useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'umi';\n\nexport enum SegmentIndex {\n  Second = '2',\n  Third = '3',\n}\n\nexport const useSegmentedPathName = (index: SegmentIndex) => {\n  const { pathname } = useLocation();\n\n  const pathArray = pathname.split('/');\n  return pathArray[index] || '';\n};\n\nexport const useSecondPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Second);\n};\n\nexport const useThirdPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Third);\n};\n\nexport const useGetKnowledgeSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    documentId:\n      currentQueryParameters.get(KnowledgeSearchParams.DocumentId) || '',\n    knowledgeId:\n      currentQueryParameters.get(KnowledgeSearchParams.KnowledgeId) || '',\n  };\n};\n\nexport const useNavigateWithFromState = () => {\n  const navigate = useNavigate();\n  return useCallback(\n    (path: string) => {\n      navigate(path, { state: { from: path } });\n    },\n    [navigate],\n  );\n};\n\nexport const useNavigateToDataset = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  return useCallback(() => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeId}`);\n  }, [knowledgeId, navigate]);\n};\n","export const getOneNamespaceEffectsLoading = (\n  namespace: string,\n  effects: Record<string, boolean>,\n  effectNames: Array<string>,\n) => {\n  return effectNames.some(\n    (effectName) => effects[`${namespace}/${effectName}`],\n  );\n};\n\nexport const delay = (ms: number) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n","import { getOneNamespaceEffectsLoading } from '@/utils/storeUtil';\nimport { useSelector } from 'umi';\n\n// Get the loading status of given effects under a certain namespace\nexport const useOneNamespaceEffectsLoading = (\n  namespace: string,\n  effectNames: Array<string>,\n) => {\n  const effects = useSelector((state: any) => state.loading.effects);\n  return getOneNamespaceEffectsLoading(namespace, effects, effectNames);\n};\n","import { ITenantInfo } from '@/interfaces/database/knowledge';\nimport { ISystemStatus, IUserInfo } from '@/interfaces/database/userSetting';\nimport userService from '@/services/userService';\nimport authorizationUtil from '@/utils/authorizationUtil';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { history, useDispatch, useSelector } from 'umi';\n\nexport const useFetchUserInfo = () => {\n  const dispatch = useDispatch();\n  const fetchUserInfo = useCallback(() => {\n    dispatch({ type: 'settingModel/getUserInfo' });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchUserInfo();\n  }, [fetchUserInfo]);\n};\n\nexport const useSelectUserInfo = () => {\n  const userInfo: IUserInfo = useSelector(\n    (state: any) => state.settingModel.userInfo,\n  );\n\n  return userInfo;\n};\n\nexport const useSelectTenantInfo = () => {\n  const tenantInfo: ITenantInfo = useSelector(\n    (state: any) => state.settingModel.tenantIfo,\n  );\n\n  return tenantInfo;\n};\n\nexport const useFetchTenantInfo = (isOnMountFetching: boolean = true) => {\n  const dispatch = useDispatch();\n\n  const fetchTenantInfo = useCallback(() => {\n    dispatch({\n      type: 'settingModel/getTenantInfo',\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isOnMountFetching) {\n      fetchTenantInfo();\n    }\n  }, [fetchTenantInfo, isOnMountFetching]);\n\n  return fetchTenantInfo;\n};\n\nexport const useSelectParserList = (): Array<{\n  value: string;\n  label: string;\n}> => {\n  const tenantInfo: ITenantInfo = useSelectTenantInfo();\n\n  const parserList = useMemo(() => {\n    const parserArray: Array<string> = tenantInfo?.parser_ids.split(',') ?? [];\n    return parserArray.map((x) => {\n      const arr = x.split(':');\n      return { value: arr[0], label: arr[1] };\n    });\n  }, [tenantInfo]);\n\n  return parserList;\n};\n\nexport const useLogout = () => {\n  const dispatch = useDispatch(); // TODO: clear redux state\n\n  const logout = useCallback(async () => {\n    const retcode = await dispatch<any>({ type: 'loginModel/logout' });\n    if (retcode === 0) {\n      authorizationUtil.removeAll();\n      history.push('/login');\n    }\n  }, [dispatch]);\n\n  return logout;\n};\n\nexport const useSaveSetting = () => {\n  const dispatch = useDispatch();\n\n  const saveSetting = useCallback(\n    (userInfo: { new_password: string } | Partial<IUserInfo>): number => {\n      return dispatch<any>({ type: 'settingModel/setting', payload: userInfo });\n    },\n    [dispatch],\n  );\n\n  return saveSetting;\n};\n\nexport const useFetchSystemVersion = () => {\n  const [version, setVersion] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemVersion = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemVersion();\n    if (data.retcode === 0) {\n      setVersion(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchSystemVersion, version, loading };\n};\n\nexport const useFetchSystemStatus = () => {\n  const [systemStatus, setSystemStatus] = useState<ISystemStatus>(\n    {} as ISystemStatus,\n  );\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemStatus = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemStatus();\n    if (data.retcode === 0) {\n      setSystemStatus(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    systemStatus,\n    fetchSystemStatus,\n    loading,\n  };\n};\n","import { IChunk } from '@/interfaces/database/knowledge';\nimport { UploadFile } from 'antd';\nimport { v4 as uuid } from 'uuid';\n\nexport const buildChunkHighlights = (\n  selectedChunk: IChunk,\n  size: { width: number; height: number },\n) => {\n  return Array.isArray(selectedChunk?.positions) &&\n    selectedChunk.positions.every((x) => Array.isArray(x))\n    ? selectedChunk?.positions?.map((x) => {\n        const boundingRect = {\n          width: size.width,\n          height: size.height,\n          x1: x[1],\n          x2: x[2],\n          y1: x[3],\n          y2: x[4],\n        };\n        return {\n          id: uuid(),\n          comment: {\n            text: '',\n            emoji: '',\n          },\n          content: { text: selectedChunk.content_with_weight },\n          position: {\n            boundingRect: boundingRect,\n            rects: [boundingRect],\n            pageNumber: x[0],\n          },\n        };\n      })\n    : [];\n};\n\nexport const isFileUploadDone = (file: UploadFile) => file.status === 'done';\n\nexport const getExtension = (name: string) =>\n  name?.slice(name.lastIndexOf('.') + 1).toLowerCase() ?? '';\n\nexport const isPdf = (name: string) => {\n  return getExtension(name) === 'pdf';\n};\n\nexport const getUnSupportedFilesCount = (message: string) => {\n  return message.split('\\n').length;\n};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 86635;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["KnowledgeRouteKey","RunningStatus","ModelVariableType","settledModelVariableMap","_defineProperty","Improvise","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","Precise","Balance","LlmModelType","KnowledgeSearchParams","useSetModalState","_useState","useState","_useState2","_slicedToArray","visible","setVisible","showModal","hideModal","switchVisible","useDeepCompareEffect","effect","deps","ref","useRef","callback","isEqual","current","useEffect","useDynamicSVGImport","name","options","arguments","length","undefined","ImportedIconRef","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","onCompleted","onError","importIcon","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","ReactComponent","t0","finish","stop","apply","SvgIcon","useShowDeleteConfirm","_App$useApp","App","useApp","modal","_useTranslation","useTranslation","t","showDeleteConfirm","useCallback","_ref2","onOk","onCancel","Promise","resolve","reject","confirm","title","icon","_jsx","ExclamationCircleFilled","okText","okType","cancelText","_callee2","ret","_context2","console","info","useTranslate","keyPrefix","useCommonTranslation","useGetDocumentUrl","documentId","getDocumentUrl","id","concat","api_host","useGetChunkHighlights","selectedChunk","width","height","size","setSize","highlights","useMemo","buildChunkHighlights","setWidthAndHeight","pre","useFetchDocumentList","_useGetKnowledgeSearc","useGetKnowledgeSearchParams","knowledgeId","dispatch","useDispatch","fetchKfList","type","payload","kb_id","useSetDocumentStatus","_useGetKnowledgeSearc2","setDocumentStatus","status","doc_id","Number","useSelectDocumentList","list","useSelector","state","kFModel","data","useSaveDocumentName","_useGetKnowledgeSearc3","saveName","useCreateDocument","_useGetKnowledgeSearc4","createDocument","errorInfo","log","useSetDocumentParser","_useGetKnowledgeSearc5","setDocumentParser","parserId","parserConfig","parser_id","parser_config","useRemoveDocument","_useGetKnowledgeSearc6","removeDocument","documentIds","useUploadDocument","_useGetKnowledgeSearc7","uploadDocument","fileList","useRunDocument","runDocumentByIds","useSelectRunDocumentLoading","useOneNamespaceEffectsLoading","useChangeDocumentParser","_useSetModalState","changeParserVisible","hideChangeParserModal","showChangeParserModal","onChangeParserOk","_x","_x2","changeParserLoading","useSetSelectedRecord","currentRecord","setCurrentRecord","setRecord","record","useChangeLanguage","i18n","saveSetting","useSaveSetting","changeLanguage","lng","LanguageTranslationMap","language","useGetPagination","total","page","pageSize","onPageChange","_useTranslate","pagination","showQuickJumper","showSizeChanger","pageSizeOptions","onChange","showTotal","useSetPagination","namespace","setPagination","pageNumber","useFetchAppConf","appConf","setAppConf","fetchAppConf","axios","get","useSendMessageWithSse","url","api","completeConversation","answer","setAnswer","_useState7","_useState8","done","setDone","send","_ref3","_callee3","body","_response$body","response","reader","x","_done","value","val","d","_context3","fetch","method","headers","Authorization","getAuthorization","JSON","stringify","pipeThrough","TextDecoderStream","EventSourceParserStream","getReader","read","parse","e","warn","abrupt","_x3","SegmentIndex","useSegmentedPathName","index","_useLocation","useLocation","pathname","pathArray","split","useSecondPathName","Second","useThirdPathName","Third","_useSearchParams","useSearchParams","_useSearchParams2","currentQueryParameters","DocumentId","KnowledgeId","useNavigateWithFromState","navigate","useNavigate","path","from","useNavigateToDataset","Dataset","getOneNamespaceEffectsLoading","effects","effectNames","some","effectName","delay","ms","setTimeout","useFetchUserInfo","fetchUserInfo","useSelectUserInfo","userInfo","settingModel","useSelectTenantInfo","tenantInfo","tenantIfo","useFetchTenantInfo","isOnMountFetching","fetchTenantInfo","useSelectParserList","parserList","_tenantInfo$parser_id","parserArray","parser_ids","map","arr","label","useLogout","logout","retcode","authorizationUtil","removeAll","history","push","useFetchSystemVersion","version","setVersion","fetchSystemVersion","_yield$userService$ge","userService","getSystemVersion","useFetchSystemStatus","systemStatus","setSystemStatus","fetchSystemStatus","_yield$userService$ge2","getSystemStatus","_selectedChunk$positi","Array","isArray","positions","every","boundingRect","x1","x2","y1","y2","uuid","comment","text","emoji","content","content_with_weight","position","rects","isFileUploadDone","file","getExtension","_name$slice$toLowerCa","slice","lastIndexOf","toLowerCase","isPdf","getUnSupportedFilesCount","message","webpackEmptyAsyncContext","req","module"],"sourceRoot":""}