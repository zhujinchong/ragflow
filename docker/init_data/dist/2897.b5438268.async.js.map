{"version":3,"file":"2897.b5438268.async.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","webpack:///./src/components/chunk-method-modal/hooks.ts","webpack:///./src/components/chunk-method-modal/index.less?91a6","webpack:///./src/components/chunk-method-modal/index.tsx","webpack:///./src/components/layout-recognize.tsx","webpack:///./src/components/max-token-number.tsx","webpack:///./src/components/parse-configuration/index.tsx","webpack:///./node_modules/lodash/_baseRandom.js","webpack:///./node_modules/lodash/random.js"],"sourcesContent":["// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  MinusCircleOutlined.displayName = 'MinusCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","import {\n  useFetchTenantInfo,\n  useSelectParserList,\n} from '@/hooks/userSettingHook';\nimport { useEffect, useMemo, useState } from 'react';\n\nconst ParserListMap = new Map([\n  [\n    ['pdf'],\n    [\n      'naive',\n      'resume',\n      'manual',\n      'paper',\n      'book',\n      'laws',\n      'presentation',\n      'one',\n    ],\n  ],\n  [\n    ['doc', 'docx'],\n    ['naive', 'resume', 'book', 'laws', 'one'],\n  ],\n  [\n    ['xlsx', 'xls'],\n    ['naive', 'qa', 'table', 'one'],\n  ],\n  [['ppt', 'pptx'], ['presentation']],\n  [\n    ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tif', 'tiff', 'webp', 'svg', 'ico'],\n    ['picture'],\n  ],\n  [['txt'], ['naive', 'resume', 'book', 'laws', 'one', 'qa', 'table']],\n  [['csv'], ['naive', 'resume', 'book', 'laws', 'one', 'qa', 'table']],\n]);\n\nconst getParserList = (\n  values: string[],\n  parserList: Array<{\n    value: string;\n    label: string;\n  }>,\n) => {\n  return parserList.filter((x) => values?.some((y) => y === x.value));\n};\n\nexport const useFetchParserListOnMount = (\n  documentId: string,\n  parserId: string,\n  documentExtension: string,\n) => {\n  const [selectedTag, setSelectedTag] = useState('');\n  const parserList = useSelectParserList();\n\n  const nextParserList = useMemo(() => {\n    const key = [...ParserListMap.keys()].find((x) =>\n      x.some((y) => y === documentExtension),\n    );\n    if (key) {\n      const values = ParserListMap.get(key);\n      return getParserList(values ?? [], parserList);\n    }\n\n    return getParserList(\n      ['naive', 'resume', 'book', 'laws', 'one', 'qa', 'table'],\n      parserList,\n    );\n  }, [parserList, documentExtension]);\n\n  useFetchTenantInfo();\n\n  useEffect(() => {\n    setSelectedTag(parserId);\n  }, [parserId, documentId]);\n\n  const handleChange = (tag: string) => {\n    // const nextSelectedTag = checked ? tag : selectedTag;\n    setSelectedTag(tag);\n  };\n\n  return { parserList: nextParserList, handleChange, selectedTag };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pageInputNumber\":\"pageInputNumber___qm78X\",\"questionIcon\":\"questionIcon___d34w8\",\"chunkMethod\":\"chunkMethod___tcugG\"};","import MaxTokenNumber from '@/components/max-token-number';\nimport { IModalManagerChildrenProps } from '@/components/modal-manager';\nimport { IKnowledgeFileParserConfig } from '@/interfaces/database/knowledge';\nimport { IChangeParserConfigRequestBody } from '@/interfaces/request/document';\nimport {\n  MinusCircleOutlined,\n  PlusOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Form,\n  InputNumber,\n  Modal,\n  Select,\n  Space,\n  Tooltip,\n} from 'antd';\nimport omit from 'lodash/omit';\nimport React, { useEffect, useMemo } from 'react';\nimport { useFetchParserListOnMount } from './hooks';\n\nimport { useTranslate } from '@/hooks/commonHooks';\nimport LayoutRecognize from '../layout-recognize';\nimport ParseConfiguration, {\n  showRaptorParseConfiguration,\n} from '../parse-configuration';\nimport styles from './index.less';\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  onOk: (\n    parserId: string,\n    parserConfig: IChangeParserConfigRequestBody,\n  ) => void;\n  showModal?(): void;\n  parserId: string;\n  parserConfig: IKnowledgeFileParserConfig;\n  documentExtension: string;\n  documentId: string;\n}\n\nconst hidePagesChunkMethods = ['qa', 'table', 'picture', 'resume', 'one'];\n\nconst ChunkMethodModal: React.FC<IProps> = ({\n  documentId,\n  parserId,\n  onOk,\n  hideModal,\n  visible,\n  documentExtension,\n  parserConfig,\n  loading,\n}) => {\n  const { parserList, handleChange, selectedTag } = useFetchParserListOnMount(\n    documentId,\n    parserId,\n    documentExtension,\n  );\n  const [form] = Form.useForm();\n  const { t } = useTranslate('knowledgeDetails');\n\n  const handleOk = async () => {\n    const values = await form.validateFields();\n    const parser_config = {\n      ...values.parser_config,\n      pages: values.pages?.map((x: any) => [x.from, x.to]) ?? [],\n    };\n    onOk(selectedTag, parser_config);\n  };\n\n  const isPdf = documentExtension === 'pdf';\n\n  const showPages = useMemo(() => {\n    return isPdf && hidePagesChunkMethods.every((x) => x !== selectedTag);\n  }, [selectedTag, isPdf]);\n\n  const showOne = useMemo(() => {\n    return (\n      isPdf &&\n      hidePagesChunkMethods\n        .filter((x) => x !== 'one')\n        .every((x) => x !== selectedTag)\n    );\n  }, [selectedTag, isPdf]);\n\n  const showMaxTokenNumber = selectedTag === 'naive';\n\n  const hideDivider = [showPages, showOne, showMaxTokenNumber].every(\n    (x) => x === false,\n  );\n\n  const afterClose = () => {\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    if (visible) {\n      const pages =\n        parserConfig.pages?.map((x) => ({ from: x[0], to: x[1] })) ?? [];\n      form.setFieldsValue({\n        pages: pages.length > 0 ? pages : [{ from: 1, to: 1024 }],\n        parser_config: omit(parserConfig, 'pages'),\n      });\n    }\n  }, [form, parserConfig, visible]);\n\n  return (\n    <Modal\n      title={t('chunkMethod')}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      afterClose={afterClose}\n      confirmLoading={loading}\n      width={700}\n    >\n      <Space size={[0, 8]} wrap>\n        <Form.Item label={t('chunkMethod')} className={styles.chunkMethod}>\n          <Select\n            style={{ width: 120 }}\n            onChange={handleChange}\n            value={selectedTag}\n            options={parserList}\n          />\n        </Form.Item>\n      </Space>\n      {hideDivider || <Divider></Divider>}\n      <Form name=\"dynamic_form_nest_item\" autoComplete=\"off\" form={form}>\n        {showPages && (\n          <>\n            <Space>\n              <p>{t('pageRanges')}:</p>\n              <Tooltip title={t('pageRangesTip')}>\n                <QuestionCircleOutlined\n                  className={styles.questionIcon}\n                ></QuestionCircleOutlined>\n              </Tooltip>\n            </Space>\n            <Form.List name=\"pages\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <Space\n                      key={key}\n                      style={{\n                        display: 'flex',\n                      }}\n                      align=\"baseline\"\n                    >\n                      <Form.Item\n                        {...restField}\n                        name={[name, 'from']}\n                        dependencies={name > 0 ? [name - 1, 'to'] : []}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('fromMessage'),\n                          },\n                          ({ getFieldValue }) => ({\n                            validator(_, value) {\n                              if (\n                                name === 0 ||\n                                !value ||\n                                getFieldValue(['pages', name - 1, 'to']) < value\n                              ) {\n                                return Promise.resolve();\n                              }\n                              return Promise.reject(\n                                new Error(t('greaterThanPrevious')),\n                              );\n                            },\n                          }),\n                        ]}\n                      >\n                        <InputNumber\n                          placeholder={t('fromPlaceholder')}\n                          min={0}\n                          precision={0}\n                          className={styles.pageInputNumber}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        {...restField}\n                        name={[name, 'to']}\n                        dependencies={[name, 'from']}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('toMessage'),\n                          },\n                          ({ getFieldValue }) => ({\n                            validator(_, value) {\n                              if (\n                                !value ||\n                                getFieldValue(['pages', name, 'from']) < value\n                              ) {\n                                return Promise.resolve();\n                              }\n                              return Promise.reject(\n                                new Error(t('greaterThan')),\n                              );\n                            },\n                          }),\n                        ]}\n                      >\n                        <InputNumber\n                          placeholder={t('toPlaceholder')}\n                          min={0}\n                          precision={0}\n                          className={styles.pageInputNumber}\n                        />\n                      </Form.Item>\n                      {name > 0 && (\n                        <MinusCircleOutlined onClick={() => remove(name)} />\n                      )}\n                    </Space>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      block\n                      icon={<PlusOutlined />}\n                    >\n                      {t('addPage')}\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </>\n        )}\n        {showOne && <LayoutRecognize></LayoutRecognize>}\n        {showPages && (\n          <Form.Item\n            noStyle\n            dependencies={[['parser_config', 'layout_recognize']]}\n          >\n            {({ getFieldValue }) =>\n              getFieldValue(['parser_config', 'layout_recognize']) && (\n                <Form.Item\n                  name={['parser_config', 'task_page_size']}\n                  label={t('taskPageSize')}\n                  tooltip={t('taskPageSizeTip')}\n                  initialValue={12}\n                  rules={[\n                    {\n                      required: true,\n                      message: t('taskPageSizeMessage'),\n                    },\n                  ]}\n                >\n                  <InputNumber min={1} max={128} />\n                </Form.Item>\n              )\n            }\n          </Form.Item>\n        )}\n        {showMaxTokenNumber && <MaxTokenNumber></MaxTokenNumber>}\n        {showRaptorParseConfiguration(selectedTag) && (\n          <ParseConfiguration></ParseConfiguration>\n        )}\n      </Form>\n    </Modal>\n  );\n};\nexport default ChunkMethodModal;\n","import { useTranslate } from '@/hooks/commonHooks';\nimport { Form, Switch } from 'antd';\n\nconst LayoutRecognize = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  return (\n    <Form.Item\n      name={['parser_config', 'layout_recognize']}\n      label={t('layoutRecognize')}\n      initialValue={true}\n      valuePropName=\"checked\"\n      tooltip={t('layoutRecognizeTip')}\n    >\n      <Switch />\n    </Form.Item>\n  );\n};\n\nexport default LayoutRecognize;\n","import { useTranslate } from '@/hooks/commonHooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\nconst MaxTokenNumber = () => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form.Item label={t('chunkTokenNumber')} tooltip={t('chunkTokenNumberTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'chunk_token_num']}\n            noStyle\n            initialValue={128}\n            rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n          >\n            <Slider max={2048} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item\n          name={['parser_config', 'chunk_token_num']}\n          noStyle\n          rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n        >\n          <InputNumber max={2048} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport default MaxTokenNumber;\n","import { useTranslate } from '@/hooks/commonHooks';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  InputNumber,\n  Slider,\n  Switch,\n} from 'antd';\nimport random from 'lodash/random';\n\nexport const excludedParseMethods = ['table', 'resume', 'one',\"picture\"];\n\nexport const showRaptorParseConfiguration = (parserId: string) => {\n  return !excludedParseMethods.includes(parserId);\n};\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst ParseConfiguration = () => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const handleGenerate = () => {\n    form.setFieldValue(\n      ['parser_config', 'raptor', 'random_seed'],\n      random(10000),\n    );\n  };\n\n  return (\n    <>\n      <Divider></Divider>\n      <Form.Item\n        name={['parser_config', 'raptor', 'use_raptor']}\n        label={t('useRaptor')}\n        initialValue={false}\n        valuePropName=\"checked\"\n        tooltip={t('useRaptorTip')}\n      >\n        <Switch />\n      </Form.Item>\n      <Form.Item\n        shouldUpdate={(prevValues, curValues) =>\n          prevValues.parser_config.raptor.use_raptor !==\n          curValues.parser_config.raptor.use_raptor\n        }\n      >\n        {({ getFieldValue }) => {\n          const useRaptor = getFieldValue([\n            'parser_config',\n            'raptor',\n            'use_raptor',\n          ]);\n\n          return (\n            useRaptor && (\n              <>\n                <Form.Item\n                  name={['parser_config', 'raptor', 'prompt']}\n                  label={t('prompt')}\n                  initialValue={t('promptText')}\n                  tooltip={t('promptTip')}\n                  rules={[\n                    {\n                      required: true,\n                      message: t('promptMessage'),\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={8} />\n                </Form.Item>\n                <Form.Item label={t('maxToken')} tooltip={t('maxTokenTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_token']}\n                        noStyle\n                        initialValue={256}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxTokenMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider max={2048} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_token']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxTokenMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={2048} min={0} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('threshold')} tooltip={t('thresholdTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'threshold']}\n                        noStyle\n                        initialValue={0.1}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('thresholdMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider\n                          min={0}\n                          max={1}\n                          style={{ width: '100%' }}\n                          step={0.01}\n                        />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'threshold']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('thresholdMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1} min={0} step={0.01} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('maxCluster')} tooltip={t('maxClusterTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_cluster']}\n                        noStyle\n                        initialValue={64}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxClusterMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider min={1} max={1024} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_cluster']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxClusterMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1024} min={1} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('randomSeed')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'random_seed']}\n                        noStyle\n                        initialValue={0}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('randomSeedMessage'),\n                          },\n                        ]}\n                      >\n                        <InputNumber style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item noStyle>\n                      <Button type=\"primary\" onClick={handleGenerate}>\n                        <PlusOutlined />\n                      </Button>\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n              </>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ParseConfiguration;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["MinusCircleOutlined","props","ref","AntdIcon","ParserListMap","Map","getParserList","values","parserList","filter","x","some","y","value","useFetchParserListOnMount","documentId","parserId","documentExtension","_useState","useState","_useState2","_slicedToArray","selectedTag","setSelectedTag","useSelectParserList","nextParserList","useMemo","key","_toConsumableArray","keys","find","get","useFetchTenantInfo","useEffect","handleChange","tag","hidePagesChunkMethods","ChunkMethodModal","_ref","onOk","hideModal","visible","parserConfig","loading","_useFetchParserListOn","_Form$useForm","Form","useForm","_Form$useForm2","form","_useTranslate","useTranslate","t","handleOk","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_values$pages$map","_values$pages","parser_config","wrap","_context","prev","next","validateFields","sent","_objectSpread","pages","map","from","to","stop","apply","arguments","isPdf","showPages","every","showOne","showMaxTokenNumber","hideDivider","afterClose","resetFields","_parserConfig$pages$m","_parserConfig$pages","setFieldsValue","length","omit","_jsxs","Modal","title","open","onCancel","confirmLoading","width","children","_jsx","Space","size","Item","label","className","styles","chunkMethod","Select","style","onChange","options","Divider","name","autoComplete","_Fragment","Tooltip","QuestionCircleOutlined","questionIcon","List","fields","_ref3","add","remove","_ref4","restField","_objectWithoutProperties","_excluded","display","align","dependencies","rules","required","message","_ref5","getFieldValue","validator","_","Promise","resolve","reject","Error","InputNumber","placeholder","min","precision","pageInputNumber","_ref6","onClick","Button","type","block","icon","PlusOutlined","LayoutRecognize","noStyle","_ref7","tooltip","initialValue","max","MaxTokenNumber","showRaptorParseConfiguration","ParseConfiguration","valuePropName","Switch","Flex","gap","flex","Slider","excludedParseMethods","includes","useFormInstance","handleGenerate","setFieldValue","random","shouldUpdate","prevValues","curValues","raptor","use_raptor","useRaptor","Input","TextArea","rows","step","nativeFloor","nativeRandom","baseRandom","lower","upper","module","isIterateeCall","toFinite","freeParseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}